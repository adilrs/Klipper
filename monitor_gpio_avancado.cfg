# Monitor avançado para GPIO 22 (Pino 15) - Sensor Piezoelétrico
# Sistema de monitoramento em tempo real com análise de padrões

# Macro para monitoramento em tempo real com display visual
[gcode_macro MONITOR_TEMPO_REAL]
description: Monitor visual em tempo real do GPIO 22
gcode:
    {% set duracao = params.DURACAO|default(30)|int %}
    {% set intervalo = params.INTERVALO|default(0.1)|float %}
    
    RESPOND MSG="╔══════════════════════════════════════╗"
    RESPOND MSG="║     MONITOR TEMPO REAL - GPIO 22     ║"
    RESPOND MSG="║        Pino 15 (Sensor Piezo)       ║"
    RESPOND MSG="╚══════════════════════════════════════╝"
    RESPOND MSG="Duração: {duracao}s | Intervalo: {intervalo}s"
    RESPOND MSG="🟢 = Sensor livre | 🔴 = Sensor acionado"
    RESPOND MSG="Pressione CTRL+C no terminal para parar"
    RESPOND MSG=""
    
    {% set total_leituras = (duracao / intervalo)|int %}
    {% for i in range(total_leituras) %}
        {% set tempo_atual = (i * intervalo)|round(1) %}
        QUERY_PROBE
        # A resposta do QUERY_PROBE será mostrada automaticamente
        G4 P{(intervalo * 1000)|int}
        
        # A cada 10 leituras, mostra progresso
        {% if (i + 1) % 10 == 0 %}
            {% set progresso = ((i + 1) / total_leituras * 100)|int %}
            RESPOND MSG="⏱️  Progresso: {progresso}% ({tempo_atual}s/{duracao}s)"
        {% endif %}
    {% endfor %}
    
    RESPOND MSG="✅ Monitoramento concluído!"

# Macro para teste de resposta rápida
[gcode_macro TESTE_RESPOSTA_RAPIDA]
description: Testa a velocidade de resposta do sensor
gcode:
    {% set repeticoes = params.REPETICOES|default(20)|int %}
    
    RESPOND MSG="⚡ TESTE DE RESPOSTA RÁPIDA ⚡"
    RESPOND MSG="Testando {repeticoes} leituras consecutivas"
    RESPOND MSG="Intervalo: 50ms entre leituras"
    RESPOND MSG=""
    
    {% for i in range(repeticoes) %}
        RESPOND MSG="📊 Leitura {i+1}/{repeticoes}: {printer['gcode_button sensor_piezo'].state}"
        G4 P50  # 50ms entre leituras
    {% endfor %}
    
    RESPOND MSG="✅ Teste de resposta concluído!"

# Macro para análise de estabilidade
[gcode_macro ANALISE_ESTABILIDADE]
description: Analisa a estabilidade do sensor ao longo do tempo
gcode:
    {% set ciclos = params.CICLOS|default(50)|int %}
    {% set pausa_ciclo = params.PAUSA|default(2)|int %}
    
    RESPOND MSG="📈 ANÁLISE DE ESTABILIDADE 📈"
    RESPOND MSG="Ciclos: {ciclos} | Pausa entre ciclos: {pausa_ciclo}s"
    RESPOND MSG="Deixe o sensor em repouso durante o teste"
    RESPOND MSG=""
    
    {% for i in range(ciclos) %}
        {% set minuto = (i * pausa_ciclo / 60)|round(1) %}
        RESPOND MSG="🔍 Ciclo {i+1}/{ciclos} (t={minuto}min): {printer['gcode_button sensor_piezo'].state}"
        
        {% if pausa_ciclo > 0 %}
            G4 P{pausa_ciclo * 1000}
        {% endif %}
        
        # Checkpoint a cada 10 ciclos
        {% if (i + 1) % 10 == 0 %}
            RESPOND MSG="📋 Checkpoint: {i+1} ciclos completados"
        {% endif %}
    {% endfor %}
    
    RESPOND MSG="✅ Análise de estabilidade concluída!"
    RESPOND MSG="Verifique se houve leituras inconsistentes"

# Macro para teste de sensibilidade com níveis
[gcode_macro TESTE_SENS_NIV]
description: Teste de sensibilidade com diferentes níveis de toque
gcode:
    RESPOND MSG="🎯 TESTE DE SENSIBILIDADE POR NÍVEIS 🎯"
    RESPOND MSG="Siga as instruções para cada nível de toque"
    RESPOND MSG=""
    
    # Nível 1: Toque muito leve
    RESPOND MSG="📍 NÍVEL 1: Toque MUITO LEVE"
    RESPOND MSG="Toque levemente o sensor (como uma pena)"
    RESPOND MSG="Pressione qualquer tecla e execute QUERY_PROBE"
    G4 P3000
    RESPOND MSG="Estado Nível 1: {printer['gcode_button sensor_piezo'].state}"
    
    # Nível 2: Toque normal
    RESPOND MSG="📍 NÍVEL 2: Toque NORMAL"
    RESPOND MSG="Toque normalmente o sensor"
    RESPOND MSG="Aguarde 3 segundos..."
    G4 P3000
    RESPOND MSG="Estado Nível 2: {printer['gcode_button sensor_piezo'].state}"
    
    # Nível 3: Toque firme
    RESPOND MSG="📍 NÍVEL 3: Toque FIRME"
    RESPOND MSG="Pressione firmemente o sensor"
    RESPOND MSG="Aguarde 3 segundos..."
    G4 P3000
    RESPOND MSG="Estado Nível 3: {printer['gcode_button sensor_piezo'].state}"
    
    # Estado final
    RESPOND MSG="📍 ESTADO FINAL: Sensor livre"
    RESPOND MSG="Solte completamente o sensor"
    RESPOND MSG="Aguarde 3 segundos..."
    G4 P3000
    RESPOND MSG="Estado Final: {printer['gcode_button sensor_piezo'].state}"
    
    RESPOND MSG="✅ Teste de sensibilidade concluído!"
    RESPOND MSG="Ajuste o potenciômetro da placa LM393 se necessário"

# Macro para monitoramento com contador de eventos
[gcode_macro CONTADOR_EVENTOS]
description: Conta quantas vezes o sensor é acionado
variable_eventos_detectados: 0
variable_estado_anterior: 0
gcode:
    {% set duracao = params.DURACAO|default(60)|int %}
    {% set intervalo = params.INTERVALO|default(0.2)|float %}
    
    # Reset do contador
    SET_GCODE_VARIABLE MACRO=CONTADOR_EVENTOS VARIABLE=eventos_detectados VALUE=0
    SET_GCODE_VARIABLE MACRO=CONTADOR_EVENTOS VARIABLE=estado_anterior VALUE=0
    
    RESPOND MSG="🔢 CONTADOR DE EVENTOS 🔢"
    RESPOND MSG="Duração: {duracao}s | Verificação a cada {intervalo}s"
    RESPOND MSG="Toque o sensor várias vezes para testar"
    RESPOND MSG=""
    
    {% set total_checks = (duracao / intervalo)|int %}
    {% for i in range(total_checks) %}
        # Monitora estado do sensor automaticamente via gcode_button
        G4 P{(intervalo * 1000)|int}
        
        {% if (i + 1) % 25 == 0 %}
            {% set tempo_decorrido = ((i + 1) * intervalo)|int %}
            RESPOND MSG="⏰ Tempo: {tempo_decorrido}s/{duracao}s"
        {% endif %}
    {% endfor %}
    
    RESPOND MSG="✅ Monitoramento de eventos concluído!"
    RESPOND MSG="Verifique o log para contar os eventos manualmente"

# Macro para teste de ruído/interferência
[gcode_macro TESTE_RUIDO]
description: Detecta ruído ou interferência no sensor
gcode:
    {% set amostras = params.AMOSTRAS|default(100)|int %}
    
    RESPOND MSG="🌊 TESTE DE RUÍDO/INTERFERÊNCIA 🌊"
    RESPOND MSG="Coletando {amostras} amostras rápidas"
    RESPOND MSG="NÃO toque no sensor durante este teste"
    RESPOND MSG=""
    
    {% for i in range(amostras) %}
        {% if i % 20 == 0 %}
            RESPOND MSG="📊 Amostra {i+1}-{(i+20)|min(amostras)}/{amostras} - Estado: {printer['gcode_button sensor_piezo'].state}"
        {% endif %}
        G4 P25  # 25ms entre amostras (40Hz)
    {% endfor %}
    
    RESPOND MSG="✅ Teste de ruído concluído!"
    RESPOND MSG="Se houve mudanças de estado, pode haver interferência"
    RESPOND MSG="Verifique conexões e blindagem se necessário"

# Macro de ajuda com menu visual
[gcode_macro MENU_SENSOR_PIEZO]
description: Menu principal para testes do sensor piezoelétrico
gcode:
    RESPOND MSG="╔══════════════════════════════════════════════════╗"
    RESPOND MSG="║           MENU SENSOR PIEZOELÉTRICO              ║"
    RESPOND MSG="║              GPIO 22 (Pino 15)                  ║"
    RESPOND MSG="╠══════════════════════════════════════════════════╣"
    RESPOND MSG="║  TESTES BÁSICOS:                                ║"
    RESPOND MSG="║  • TESTE_SENSOR_PIEZO - Teste inicial           ║"
    RESPOND MSG="║  • Monitoramento automático ativo               ║"
    RESPOND MSG="║                                                  ║"
    RESPOND MSG="║  MONITORAMENTO:                                 ║"
    RESPOND MSG="║  • MONITOR_TEMPO_REAL DURACAO=30               ║"
    RESPOND MSG="║  • TESTE_RESPOSTA_RAPIDA REPETICOES=20          ║"
    RESPOND MSG="║  • ANALISE_ESTABILIDADE CICLOS=30               ║"
    RESPOND MSG="║                                                  ║"
    RESPOND MSG="║  CALIBRAÇÃO:                                    ║"
    RESPOND MSG="║  • TESTE_SENSIBILIDADE_NIVEIS                   ║"
    RESPOND MSG="║  • CALIBRAR_SENSIBILIDADE_PIEZO                 ║"
    RESPOND MSG="║                                                  ║"
    RESPOND MSG="║  DIAGNÓSTICO:                                   ║"
    RESPOND MSG="║  • DIAGNOSTICO_SENSOR_PIEZO                     ║"
    RESPOND MSG="║  • TESTE_RUIDO AMOSTRAS=50                      ║"
    RESPOND MSG="║  • CONTADOR_EVENTOS DURACAO=60                  ║"
    RESPOND MSG="╚══════════════════════════════════════════════════╝"
    RESPOND MSG="💡 Dica: Comece com TESTE_SENSOR_PIEZO"
    RESPOND MSG="🔧 Ajuste o potenciômetro da placa LM393 conforme necessário"