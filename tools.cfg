 
[gcode_macro TOOL_DATA]
variable_z_antes: 0.0
# üìç Posi√ß√µes f√≠sicas no dock
variable_dock_x1: 10.0
variable_dock_x2: 90.0
variable_dock_x3: 169.0
variable_dock_x4: 249.0

variable_standby_temp_T1: 170
variable_standby_temp_T2: 170
variable_standby_temp_T3: 170

# üõ†Ô∏è Offsets da ferramenta T0~T3 (apenas X/Y - Z lido diretamente de variables.cfg)
#  T0   AMARELO (refer√™ncia BLTouch)
variable_offset_x1: 0.0
variable_offset_y1: 0.0
# offset_z1 removido - T0 sempre tem Z=0.0 (refer√™ncia)

#  T1 BRANCO - X/Y fixos calibrados manualmente
variable_offset_x2: -0.1  # Valor fixo calibrado manualmente
variable_offset_y2: 2.2   # Valor fixo calibrado manualmente
# offset_z2 removido - Z lido diretamente de variables.cfg como tool_1_offset_z

#  T2 ROXO - X/Y fixos calibrados manualmente
variable_offset_x3: -1.26 # Valor fixo calibrado manualmente
variable_offset_y3: 5.0   # Valor fixo calibrado manualmente
# offset_z3 removido - Z lido diretamente de variables.cfg como tool_1_offset_z

#X POSITIVO MOVE PRA DIREITA
#Y POSITIVO MOVE PARA CIMA

#  T3 - X/Y iniciais para calibra√ß√£o posterior
variable_offset_x4: 0.0
variable_offset_y4: 0.0
# offset_z4 removido - Z lido diretamente de variables.cfg como tool_2_offset_z

# üß† Dados auxiliares
variable_tool_y: 278  # Posi√ß√£o necess√°ria para travamento magn√©tico das ferramentas
variable_secure_y: 200
variable_approach_speed: 10000

gcode:
  RESPOND MSG="TOOL_DATA carregada"


  
 
[gcode_macro G12]
gcode:
  ; comandos de limpeza aqui
  CLEAN_NOZZLE_T0

[gcode_macro CLEAN_NOZZLE_T0]
description: "Limpeza do bico usando offset correto da ferramenta ativa"
gcode:
  {% set start_x = printer.toolhead.position.x|default(0) %}
  {% set start_y = printer.toolhead.position.y|default(0) %}
  {% set start_z = printer.toolhead.position.z|default(5) %}
  {% set active_tool = printer.toolhead.extruder %}
  {% set temp = printer[active_tool].temperature|float %}
  {% if temp >= 170 %}
  #{% if printer.extruder.temperature|float >= 170 %}

     SET_SERVO SERVO=tool_servo WIDTH=1  
    ; üîß CORRE√á√ÉO: T0 deve ter offset ZERO (√© a refer√™ncia com BLTouch)
    ; T0 = ferramenta f√≠sica 1, mas offset deve ser 0,0,0 (refer√™ncia)
    {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
    {% set vars = printer.save_variables.variables %}
    {% if current_tool == 1 %}
        ; T0 (ferramenta f√≠sica 1) = offset ZERO (refer√™ncia BLTouch)
        {% set x = 0.0 %}
        {% set y = 0.0 %}
        {% set z = 0.0 %}
        RESPOND PREFIX="INFO" MSG="T0 (refer√™ncia): Offset ZERO aplicado X={x} Y={y} Z={z}"
    {% elif current_tool == 2 %}
        ; T1 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
        {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x2")|default(0)|float %}
        {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y2")|default(0)|float %}
        {% set z = vars.get('tool_0_offset_z', 0.0)|float %}
        RESPOND PREFIX="INFO" MSG="T1: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
    {% elif current_tool == 3 %}
        ; T2 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
        {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x3")|default(0)|float %}
        {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y3")|default(0)|float %}
        {% set z = vars.get('tool_1_offset_z', 0.0)|float %}
        RESPOND PREFIX="INFO" MSG="T2: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
    {% else %}
        ; Fallback para outras ferramentas
        {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x" ~ current_tool)|default(0)|float %}
        {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y" ~ current_tool)|default(0)|float %}
        {% set z = vars.get('tool_' ~ (current_tool - 1) ~ '_offset_z', 0.0)|float %}
        RESPOND PREFIX="INFO" MSG="T{current_tool}: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
    {% endif %}
    SET_GCODE_OFFSET X={x} Y={y} Z={z} MOVE=1
  
  
  
    ; Aproxima pela rota segura com Y ‚â§ 200
    G90 
    G1 X235 Y200 f10000
    G1 X280 Y260 f10000
    G1 X313 Y251 f10000
    #G91
    #G1 E15 F3000
    #g4 p1000
    G90
    ; Posi√ß√£o inicial de limpeza (com offset aplicado)
    G1 X235 Y250 F3000
  
    ; Trajeto de limpeza
    G1 X300 Y260 f10000
  #  G1 X235 Y250 F8000
   # G1 X300 Y260 F8000
  
    ; Retorno via rota segura
    G1 Y200 f10000
    G1 X313 Y251 f10000
    G91
    G1 E5 F3000
    G1 Y-12
    G4 P1000
    G90
    ; Retorna √† posi√ß√£o original com velocidade r√°pida
    G1 X{start_x} Y{start_y} F10000
    G1 Z{start_z} F6000
    ; Aplica offset da ferramenta ativa
    APPLY_TOOL_OFFSET
    ; Restaura velocidade de impress√£o padr√£o
    G1 F{printer.configfile.settings.printer.max_velocity * 60}
  {% else %}
    RESPOND PREFIX="WARN" MSG="‚ùå Temperatura do extrusor est√° abaixo de 170‚ÄØ¬∞C. Macro abortado."
  
  {% endif %}

   SET_SERVO SERVO=tool_servo WIDTH=0
  


  

#[gcode_macro TOOL_STATE]
#variable_tool: 0
#gcode:
#  {% set saved_tool = printer.save_variables.variables.tool|default(0)|int %}
#  SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE={saved_tool}
#  RESPOND PREFIX="DEBUG" MSG="TOOL_STATE restaurado: Tool {saved_tool}"
#  M117 TOOL_STATE restaurado: Tool {saved_tool}
[gcode_macro TOOL_STATE]
variable_tool: 1
gcode:
  {% set saved_tool = printer.save_variables.variables.tool|default(1)|int %}
  SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE={saved_tool}
  {% set show_t = saved_tool - 1 %}  # s√≥ para exibir T0..T3
  RESPOND PREFIX="DEBUG" MSG="TOOL_STATE restaurado: T{show_t}"
  M117 TOOL_STATE restaurado: T{show_t}

# [gcode_macro SET_GCODE_OFFSET] - INTERCEPTA√á√ÉO DESATIVADA
# rename_existing: SET_GCODE_OFFSET_BASE
# gcode:
#   RESPOND PREFIX="DEBUG" MSG="Interceptado: SET_GCODE_OFFSET Z={params.Z|default('')} X={params.X|default('')} Y={params.Y|default('')}"
#   SET_GCODE_OFFSET_BASE {rawparams}

[gcode_macro APPLY_TOOL_OFFSET]
gcode:
  {% set tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% set vars = printer.save_variables.variables %}
  
  ; üîß CORRE√á√ÉO: T0 (tool=1) deve ter offset ZERO (refer√™ncia BLTouch)
  {% if tool == 1 %}
    ; T0 = ferramenta f√≠sica 1, mas √© a refer√™ncia (offset zero)
    {% set x = 0.0 %}
    {% set y = 0.0 %}
    {% set z = 0.0 %}
    RESPOND PREFIX="INFO" MSG="T0 (refer√™ncia): Offset ZERO aplicado X={x} Y={y} Z={z}"
  {% elif tool == 2 %}
    ; T1 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x2")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y2")|default(0)|float %}
    {% set z = vars.get('tool_0_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T1: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% elif tool == 3 %}
    ; T2 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x3")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y3")|default(0)|float %}
    {% set z = vars.get('tool_1_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T2: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% elif tool == 4 %}
    ; T3 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x4")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y4")|default(0)|float %}
    {% set z = vars.get('tool_2_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T3: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% else %}
    ; Fallback para outras ferramentas
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x" ~ tool)|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y" ~ tool)|default(0)|float %}
    {% set z = vars.get('tool_' ~ (tool - 1) ~ '_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="TOOL={tool}: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% endif %}
  
  G1 f10000
  M117 Offset aplicado: TOOL={tool}

  SET_GCODE_OFFSET X={x} Y={y}  MOVE=1 
  SET_GCODE_OFFSET Z={z}  X={x} Y={y} MOVE=1

  
[gcode_macro APPLY_TOOL_OFFSET_UNSEC]
gcode:
  {% set tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% set vars = printer.save_variables.variables %}
  
  ; üîß CORRE√á√ÉO: T0 (tool=1) deve ter offset ZERO (refer√™ncia BLTouch)
  {% if tool == 1 %}
    ; T0 = ferramenta f√≠sica 1, mas √© a refer√™ncia (offset zero)
    {% set x = 0.0 %}
    {% set y = 0.0 %}
    {% set z = 0.0 %}
    RESPOND PREFIX="INFO" MSG="T0 (refer√™ncia): Offset ZERO aplicado X={x} Y={y} Z={z}"
  {% elif tool == 2 %}
    ; T1 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x2")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y2")|default(0)|float %}
    {% set z = vars.get('tool_0_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T1: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% elif tool == 3 %}
    ; T2 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x3")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y3")|default(0)|float %}
    {% set z = vars.get('tool_1_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T2: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% elif tool == 4 %}
    ; T3 - X/Y fixos do TOOL_DATA, Z direto do variables.cfg
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x4")|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y4")|default(0)|float %}
    {% set z = vars.get('tool_2_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="T3: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% else %}
    ; Fallback para outras ferramentas
    {% set x = printer["gcode_macro TOOL_DATA"].get("offset_x" ~ tool)|default(0)|float %}
    {% set y = printer["gcode_macro TOOL_DATA"].get("offset_y" ~ tool)|default(0)|float %}
    {% set z = vars.get('tool_' ~ (tool - 1) ~ '_offset_z', 0.0)|float %}
    RESPOND PREFIX="INFO" MSG="TOOL={tool}: Offset aplicado X={x} Y={y} Z={z} (Z direto de variables.cfg)"
  {% endif %}
  
  G1 f10000
  M117 Offset aplicado: TOOL={tool}

  SET_GCODE_OFFSET X={x} Y={y}  MOVE=1 
  SET_GCODE_OFFSET Z={z}  X={x} Y={y} MOVE=1


[gcode_macro TROCA]
variable_z_antes: 0.0
gcode:
  {% set z_atual = printer.toolhead.position.z|float %}
  SET_GCODE_VARIABLE MACRO=TROCA VARIABLE=z_antes VALUE={z_atual}
  {% set tool = params.TOOL|default(0)|int %}
  {% set tool_y = printer["gcode_macro TOOL_DATA"].tool_y|int %}
  {% set secure_y = printer["gcode_macro TOOL_DATA"].secure_y|int %}
  {% set approach_speed = printer["gcode_macro TOOL_DATA"].approach_speed|int %}
  {% set x_pos = printer["gcode_macro TOOL_DATA"].get("dock_x" ~ tool)|float %}
  {% set approach_pre = tool_y - 10 %}
  {% set approach_slow = approach_speed // 10 %}
  {% set active_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% set extruders = {
    1: "extruder", 2: "extruder1", 3: "extruder2", 4: "extruder3"
  } %}
  {% set standby = {
    1: printer["gcode_macro TOOL_DATA"].standby_temp_T1|default(170)|int,
    2: printer["gcode_macro TOOL_DATA"].standby_temp_T2|default(170)|int,
    3: printer["gcode_macro TOOL_DATA"].standby_temp_T3|default(170)|int,
    4: printer["gcode_macro TOOL_DATA"].standby_temp_T3|default(170)|int
  } %}

  {% if active_tool != 0 %}
    {% set msg = "Tool " ~ active_tool ~ " ‚Üí standby (" ~ standby[active_tool] ~ "¬∞C)" %}
    RESPOND PREFIX="INFO" MSG="{msg}"
  {% endif %}

  {% set trabalho_temp = printer[extruders[tool]].target|int %}
  {% if trabalho_temp > 0 %}
    {% set msg = "Tool " ~ tool ~ " ‚Üí pr√©-aquecendo conforme slicer: " ~ trabalho_temp ~ "¬∞C" %}
    RESPOND PREFIX="INFO" MSG="{msg}"
  {% else %}
    {% set msg = "Tool " ~ tool ~ " ‚Üí slicer n√£o definiu temperatura ‚Äî aquecimento ignorado" %}
    RESPOND PREFIX="WARNING" MSG="{msg}"
  {% endif %}

  {% if active_tool != tool %}
    SAVE_GCODE_STATE NAME=toolchange
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    G90

    # Verificar presen√ßa inicial de ferramenta
    {% if printer["gcode_macro LIDAR_MODE"].status %}
      {% set lidar = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
    {% else %}
        {% set lidar = 100.0 %}
    {% endif %}

    {% if lidar > 110 %}
      RESPOND PREFIX="INFO" MSG="üîé Aus√™ncia de ferramenta detectada ‚Äî abrindo trava"
      M117 "Aus√™ncia de ferramenta detectada ‚Äî abrindo trava" 
      ABRIR
      G4 P300
    {% endif %}

    # Processo de remo√ß√£o da ferramenta ativa
    {% if active_tool != 0 and printer["gcode_macro TOOL_LOCK"].enabled %}
      {% set cur_x = printer["gcode_macro TOOL_DATA"].get("dock_x" ~ active_tool)|float %}
      {% set extruder_name = extruders[active_tool] %}
      {% set temp_minima = 160 %}
      {% set atual = printer[extruder_name].temperature|float %}
      
      {% if atual >= temp_minima %}
        M117 "Retraindo filamento na Tool {active_tool}"
        G91
        G1 E-5 F4000
        G90
      {% else %}
        {% set msg = "Tool " ~ active_tool ~ " carregada, mas extrusora est√° em " ~ atual ~ " ¬∞C ‚Äî sem retra√ß√£o" %}
        RESPOND PREFIX="INFO" MSG="{msg}"
      {% endif %}

      # Movimento para posi√ß√£o de remo√ß√£o
      G1  Y200 F8000
      G1 X{cur_x} Y200 F8000
      G1 Y{approach_pre} F{approach_speed}
      # Parar a 1cm antes para abrir servo (facilita desconex√£o)
      {% set remove_pre = tool_y - 10 %}
      G1 Y{remove_pre} F{approach_speed}
      ABRIR
      G4 P300
      # Avan√ßar para posi√ß√£o final de remo√ß√£o
      G1 Y{tool_y} F{approach_slow}
      G4 P300
      # Retornar com servo aberto para buscar pr√≥xima ferramenta
      G1 Y{secure_y} F{approach_speed}  # Movimento absoluto para posi√ß√£o segura
      G4 P800
      
      # Verificar se ferramenta foi removida
      {% if printer["gcode_macro LIDAR_MODE"].STATUS   %}
        {% set lidar = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
      {% else %}
        {% set lidar = 150.0 %}
      {% endif %}
      
      {% if lidar > 140 %}
        {% set msg = "DISTANCIA " ~ lidar ~ "mm - ferramenta removida com sucesso" %}
        M117 {msg}
        RESPOND PREFIX="INFO" MSG="‚úÖ Ferramenta removida com sucesso"
        SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE=0
        
        # Verificar se nova ferramenta est√° dispon√≠vel
         
        {% if printer["gcode_macro LIDAR_MODE"].STATUS  %}
          {% set lidar = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
        {% else %}
          {% set lidar = 150.0 %}
        {% endif %}
        {% if lidar <= 220 %}
          RESPOND PREFIX="INFO" MSG="‚úÖ Ferramenta {tool} detectada no dock ‚Äî prosseguindo"
          
          {% if printer["gcode_macro TOOL_LOCK"].enabled %}
          G1 X{x_pos} F{approach_speed}
          # Parar a 1cm antes do fim para abrir servo (ajuda desconex√£o)
          {% set approach_pre = tool_y - 10 %}
          G1 Y{approach_pre} F{approach_speed}
          ABRIR
          G4 P300
          # Avan√ßar para posi√ß√£o final
          G1 Y{tool_y} F{approach_slow}
          G4 P300
          FECHAR
          G4 P300
        {% endif %}

          SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE={tool}
          SAVE_VARIABLE VARIABLE=tool VALUE={tool}

          {% set extruder_name = extruders[tool] %}
          {% set atual = printer[extruder_name].temperature|float %}
          {% set temp_minima = 180 %}

          {% if printer[extruder_name] is defined %}
            ACTIVATE_EXTRUDER EXTRUDER={extruder_name}
          {% else %}
            RESPOND PREFIX="WARNING" MSG="Tool {tool} carregada, mas extrusora n√£o est√° definida."
          {% endif %}

          {% if atual >= temp_minima %}
            M117 "Inserindo filamento na Tool {tool}"
            G91
            G1 E5 F500
            G90
          {% else %}
            {% set msg = "Tool " ~ tool ~ " carregada, mas extrusora est√° em " ~ atual ~ " ¬∞C ‚Äî sem inser√ß√£o" %}
            M117 {msg}
            RESPOND PREFIX="INFO" MSG="{msg}"
          {% endif %}

          {% set msg = "Tool " ~ tool ~ " carregada" %}
          RESPOND MSG="{msg}"
          M117 {msg}

          G1 Y{secure_y} F{approach_speed}  # Movimento absoluto para posi√ß√£o segura
          G4 P300

          # Valida√ß√£o final
           
          {% if printer["gcode_macro LIDAR_MODE"].STATUS  %}
            {% set lidar_validacao = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
          {% else %}
            {% set lidar_validacao = 110.0 %}
          {% endif %}
    
          {% if lidar_validacao <= 110 %}
          CLEAN_NOZZLE_T0
          RESPOND PREFIX="INFO" MSG="üßº Limpando bico da ferramenta {tool}"
        {% else %}
          RESPOND PREFIX="WARNING" MSG="‚ö†Ô∏è Ferramenta n√£o confirmada ‚Äî limpeza ignorada"
        {% endif %}

        APPLY_TOOL_OFFSET
          
        {% else %}
          RESPOND PREFIX="ERROR" MSG="‚ùå Ferramenta {tool} ausente no dock ‚Äî impress√£o pausada"
         # PAUSE
        {% endif %}
        
      {% else %}
        RESPOND PREFIX="ERROR" MSG="‚ö†Ô∏è Ferramenta ainda presa ap√≥s descarregamento ‚Äî macro interrompido"
        #PAUSE  # Adicionar pausa para seguran√ßa
      {% endif %}
      
    {% else %}
      # Caso n√£o tenha ferramenta ativa, apenas carregar nova ferramenta
       
      
      {% if printer["gcode_macro LIDAR_MODE"].STATUS  %}
        {% set lidar = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
      {% else %}
        {% set lidar = 100.0 %}
      {% endif %}
      
      {% if lidar <= 140 %}
        RESPOND PREFIX="INFO" MSG="‚úÖ Ferramenta {tool} detectada no dock ‚Äî prosseguindo"
        
        {% if printer["gcode_macro TOOL_LOCK"].enabled %}
          G1 X{x_pos} F{approach_speed}
          # Parar a 1cm antes do fim para abrir servo (ajuda desconex√£o)
          {% set approach_pre = tool_y - 10 %}
          G1 Y{approach_pre} F{approach_speed}
          ABRIR
          G4 P300
          # Avan√ßar para posi√ß√£o final
          G1 Y{tool_y} F{approach_slow}
          G4 P300
          FECHAR
          G4 P300
        {% endif %}

        SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE={tool}
        SAVE_VARIABLE VARIABLE=tool VALUE={tool}

        {% set extruder_name = extruders[tool] %}
        {% set atual = printer[extruder_name].temperature|float %}
        {% set temp_minima = 180 %}

        {% if printer[extruder_name] is defined %}
          ACTIVATE_EXTRUDER EXTRUDER={extruder_name}
        {% else %}
          RESPOND PREFIX="WARNING" MSG="Tool {tool} carregada, mas extrusora n√£o est√° definida."
        {% endif %}

        {% if atual >= temp_minima %}
          M117 "Inserindo filamento na Tool {tool}"
          G91
          G1 E5 F500
          G90
        {% else %}
          {% set msg = "Tool " ~ tool ~ " carregada, mas extrusora est√° em " ~ atual ~ " ¬∞C ‚Äî sem inser√ß√£o" %}
          M117 {msg}
          RESPOND PREFIX="INFO" MSG="{msg}"
        {% endif %}

        {% set msg = "Tool " ~ tool ~ " carregada" %}
        RESPOND MSG="{msg}"
        M117 {msg}

        G91
        G1 Y-100 F{approach_speed}
        G90
        G4 P300

         
        {% if printer["gcode_macro LIDAR_MODE"].STATUS   %}
          {% set lidar_validacao = printer["gcode_macro DISTANCIA_VL53"].distancia|float %}
        {% else %}
          {% set lidar_validacao = 100.0 %}
        {% endif %}
  

        {% if lidar_validacao <= 110 %}
       # {% if 1 == 1 %}
          CLEAN_NOZZLE_T0
          RESPOND PREFIX="INFO" MSG="üßº Limpando bico da ferramenta {tool}"
          APPLY_TOOL_OFFSET
        {% else %}
          RESPOND PREFIX="WARNING" MSG="‚ö†Ô∏è Ferramenta n√£o confirmada ‚Äî limpeza ignorada"
          APPLY_TOOL_OFFSET
        {% endif %}
        
      {% else %}
        RESPOND PREFIX="ERROR" MSG="‚ùå Ferramenta {tool} ausente no dock ‚Äî impress√£o pausada"
       # PAUSE
      {% endif %}
    {% endif %}
    
  {% else %}
    {% set msg = "Tool " ~ tool ~ " j√° est√° ativa" %}
    RESPOND MSG="{msg}"
    M117 {msg}
  {% endif %}
  G1 F10000
  


[gcode_macro T0]
gcode: 
  {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% if current_tool == 1 %}
    RESPOND PREFIX="INFO" MSG="T0 j√° est√° ativa"
    M117 T0 j√° ativa
  {% else %}
    TROCA TOOL=1
  {% endif %}

[gcode_macro T1]
gcode: 
  {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% if current_tool == 2 %}
    RESPOND PREFIX="INFO" MSG="T1 j√° est√° ativa - recarregando ferramenta"
    M117 Recarregando T1...
    RECARREGAR_FERRAMENTA TOOL=2
  {% else %}
    TROCA TOOL=2
  {% endif %}

[gcode_macro T2]
gcode: 
  {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% if current_tool == 3 %}
    RESPOND PREFIX="INFO" MSG="T2 j√° est√° ativa - recarregando ferramenta"
    M117 Recarregando T2...
    RECARREGAR_FERRAMENTA TOOL=3
  {% else %}
    TROCA TOOL=3
  {% endif %}

[gcode_macro T3]
gcode: 
  {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% if current_tool == 4 %}
    RESPOND PREFIX="INFO" MSG="T3 j√° est√° ativa - recarregando ferramenta"
    M117 Recarregando T3...
    RECARREGAR_FERRAMENTA TOOL=4
  {% else %}
    TROCA TOOL=4
  {% endif %}

[gcode_macro TOOL_LOCK]
variable_enabled: True
gcode:
  {% if params.ACTION|default("") == "OFF" %}
    SET_GCODE_VARIABLE MACRO=TOOL_LOCK VARIABLE=enabled VALUE=False
    RESPOND PREFIX="INFO" MSG="Movimentos de troca de ferramenta DESATIVADOS"
  {% elif params.ACTION|default("") == "ON" %}
    SET_GCODE_VARIABLE MACRO=TOOL_LOCK VARIABLE=enabled VALUE=True
    RESPOND PREFIX="INFO" MSG="Movimentos de troca de ferramenta ATIVADOS"
  {% else %}
    RESPOND PREFIX="INFO" MSG="Uso: TOOL_LOCK ACTION=ON ou ACTION=OFF"
  {% endif %}

[gcode_macro SHOW_TOOL_STATUS]
description: Mostra o status de todas as ferramentas
gcode:
  {% set active = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% for i in range(1, 5) %}
    {% if i == active %}
      RESPOND PREFIX="TOOL" MSG="Tool {i} ‚Üí ATIVA"
    {% else %}
      RESPOND PREFIX="TOOL" MSG="Tool {i} - inativa"
    {% endif %}
  {% endfor %}
  M117 Tool ativa: {active}

[gcode_macro RECARREGAR_FERRAMENTA]
description: Recarrega a ferramenta atual abrindo servo a 1cm do estacionamento
gcode:
  {% set tool = params.TOOL|default(0)|int %}
  {% set tool_y = printer["gcode_macro TOOL_DATA"].tool_y|int %}
  {% set secure_y = printer["gcode_macro TOOL_DATA"].secure_y|int %}
  {% set approach_speed = printer["gcode_macro TOOL_DATA"].approach_speed|int %}
  {% set x_pos = printer["gcode_macro TOOL_DATA"].get("dock_x" ~ tool)|float %}
  {% set approach_pre = tool_y - 10 %}  # 1cm antes do estacionamento
  {% set approach_slow = approach_speed // 10 %}
  
  {% if tool == 0 %}
    RESPOND PREFIX="ERROR" MSG="TOOL inv√°lida para recarregamento"
    RETURN
  {% endif %}

  RESPOND PREFIX="INFO" MSG="üîÑ Recarregando ferramenta TOOL={tool} - abrindo servo a 1cm do estacionamento"
  M117 Recarregando TOOL={tool}...

  SAVE_GCODE_STATE NAME=reload_tool
  G90
  
  # Aplicar apenas offset de T0 (zero) para movimentos de troca sem mudar extrusor
  {% set x_t0 = printer["gcode_macro TOOL_DATA"].get("offset_x1")|default(0)|float %}
  {% set y_t0 = printer["gcode_macro TOOL_DATA"].get("offset_y1")|default(0)|float %}
  {% set z_t0 = 0.0 %}
  SET_GCODE_OFFSET X={x_t0} Y={y_t0} Z={z_t0}
  
  # Ir para posi√ß√£o de recarregamento (1cm antes do estacionamento)
  G1 Y200 F8000
  G1 X{x_pos} Y200 F8000
  G1 Y{approach_pre} F{approach_speed}  # Para a 1cm do estacionamento
  
  # Abrir servo para permitir reposicionamento
  ABRIR
  G4 P500
  
  # Avan√ßar para posi√ß√£o final e fechar
  G1 Y{tool_y} F{approach_slow}
  G4 P300
  FECHAR
  G4 P500
  
  # Retornar para posi√ß√£o segura
  G1 Y{secure_y} F{approach_speed}  # Movimento absoluto para posi√ß√£o segura
  
  # Aplicar offsets da ferramenta recarregada
  APPLY_TOOL_OFFSET
  
  RESTORE_GCODE_STATE NAME=reload_tool
  RESPOND PREFIX="INFO" MSG="‚úÖ Ferramenta TOOL={tool} recarregada com sucesso"
  M117 TOOL={tool} recarregada

[gcode_macro DESCARREGAR_FERRAMENTA]
description: Descarrega a ferramenta atual e retorna √† posi√ß√£o segura
gcode:
  {% set cur_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
  {% set tool_y = printer["gcode_macro TOOL_DATA"].tool_y|int %}
  {% set approach_speed = printer["gcode_macro TOOL_DATA"].approach_speed|int %}
  {% set cur_x = printer["gcode_macro TOOL_DATA"].get("dock_x" ~ cur_tool)|int %}

  {% if cur_tool == 0 %}
    RESPOND PREFIX="INFO" MSG="Nenhuma ferramenta carregada"
    RETURN
  {% endif %}

  RESPOND MSG="Descarregando ferramenta TOOL={cur_tool}"
  M117 Descarregando ferramenta TOOL={cur_tool}

  G90
  G1 Y200 F2000
  G1 X{cur_x} F2000
  G1 Y{tool_y} F{approach_speed}
  ABRIR
  G4 P300
  G91
  G1 Y-100 F2000
  G90
  SET_GCODE_VARIABLE MACRO=TOOL_STATE VARIABLE=tool VALUE=0
  M117 Tool descarregada

[gcode_macro ABRIR]
description: Abre a trava da ferramenta (servo a 0¬∞)
gcode:
  SET_SERVO SERVO=tool_servo WIDTH=1 
  SET_SERVO SERVO=tool_servo ANGLE=0 
  G4 P500
  SET_SERVO SERVO=tool_servo WIDTH=0
  RESPOND MSG="Trava aberta (0¬∞)"
[gcode_macro FECHAR]
description: Fecha a trava da ferramenta (servo a 180¬∞)
gcode:
  SET_SERVO SERVO=tool_servo WIDTH=1  
  SET_SERVO SERVO=tool_servo ANGLE=180  
  G4 P300
  SET_SERVO SERVO=tool_servo ANGLE=150  
  G4 P500
  SET_SERVO SERVO=tool_servo ANGLE=180  
  G4 P300 
  SET_SERVO SERVO=tool_servo WIDTH=0
  RESPOND MSG="Trava fechada (180¬∞)"

[gcode_macro WHOAMI]
gcode:
  RESPOND PREFIX="DEBUG" MSG="tool={printer['gcode_macro TOOL_STATE'].tool} active_extruder={printer.toolhead.extruder}"

[gcode_macro FM104]
#rename_existing: M104_BASE
gcode:
  {% set s = params.S|default(0)|float %}
  {% if 'T' in params %}
    {% set t = params.T|int %}
    {% set extr = "extruder" if t==0 else "extruder" ~ t %}
  {% else %}
    {% set extr = printer.toolhead.extruder %}
  {% endif %}
  RESPOND PREFIX="DEBUG" MSG="M104 -> {extr}  S={s}"
  SET_HEATER_TEMPERATURE HEATER={extr} TARGET={s}


[gcode_macro FM109]
#rename_existing: M109_BASE
gcode:
  {% set s = params.S|default(0)|float %}
  {% if 'T' in params %}
    {% set t = params.T|int %}
    {% set extr = "extruder" if t==0 else "extruder" ~ t %}
  {% else %}
    {% set extr = printer.toolhead.extruder %}
  {% endif %}
  RESPOND PREFIX="DEBUG" MSG="M109 -> {extr}  S={s}"
  SET_HEATER_TEMPERATURE HEATER={extr} TARGET={s}
  TEMPERATURE_WAIT SENSOR={extr} MINIMUM={s-1} MAXIMUM={s+5}