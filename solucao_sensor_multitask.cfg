# SOLU√á√ÉO SENSOR TP223 COM PROCESSAMENTO MULTITASK
# Simula o application.processmessages do Delphi usando delayed_gcode

[gcode_macro ESCANEAMENTO_MULTITASK_TP223]
description: Escaneamento com processamento de eventos em tempo real
gcode:
    RESPOND MSG="üéØ ESCANEAMENTO MULTITASK TP223 - Processamento em tempo real"
    
    # Posicionamento inicial
    G90
    G1 X320 Y100 F3000
    G1 Z10 F1000
    
    # Inicializar vari√°veis
    SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=sensor_detectado VALUE=0
    SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=altura_atual VALUE=10.0
    SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=escaneamento_ativo VALUE=1
    SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=passo_descida VALUE=0.1
    
    RESPOND MSG="üìã Iniciando descida com processamento multitask..."
    
    # Iniciar o ciclo de descida
    UPDATE_DELAYED_GCODE ID=ciclo_descida_multitask DURATION=0.5

[gcode_macro _CONTROLE_MULTITASK]
variable_sensor_detectado: 0
variable_altura_atual: 10.0
variable_escaneamento_ativo: 0
variable_passo_descida: 0.1
gcode:
    # Macro de controle de vari√°veis

[delayed_gcode ciclo_descida_multitask]
initial_duration: 0
gcode:
    # Verificar se o escaneamento ainda est√° ativo
    {% set controle = printer['gcode_macro _CONTROLE_MULTITASK'] %}
    
    {% if controle.escaneamento_ativo == 1 %}
        # Verificar estado do sensor ANTES do movimento
        {% if printer['gcode_button sensor_tp223_teste'].state == 'PRESSED' %}
            RESPOND MSG="üîç SENSOR ATIVADO! Posi√ß√£o: X{printer.toolhead.position.x} Y{printer.toolhead.position.y} Z{printer.toolhead.position.z}"
            SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=sensor_detectado VALUE=1
            SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=escaneamento_ativo VALUE=0
            
            # Parada suave
            M400  # Aguardar movimentos pendentes
            G91   # Modo relativo
            G1 Z2 F500  # Subir 2mm devagar
            G90   # Modo absoluto
            
            RESPOND MSG="‚úÖ Sensor detectado com sucesso!"
            RESPOND MSG="üìç Altura de detec√ß√£o: Z{printer.toolhead.position.z}mm"
        {% else %}
            # Sensor n√£o ativado, continuar descida
            {% set nova_altura = controle.altura_atual - controle.passo_descida %}
            
            {% if nova_altura >= 0.5 %}
                # Movimento de descida
                G1 Z{nova_altura} F300
                SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=altura_atual VALUE={nova_altura}
                
                RESPOND MSG="üìç Z={nova_altura}mm - Sensor n√£o ativado, continuando..."
                
                # Programar pr√≥ximo ciclo com pausa maior para processamento
                UPDATE_DELAYED_GCODE ID=ciclo_descida_multitask DURATION=0.5
            {% else %}
                # Chegou ao limite m√≠nimo
                SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=escaneamento_ativo VALUE=0
                RESPOND MSG="‚ö†Ô∏è Chegou ao limite m√≠nimo Z=0.5mm"
                RESPOND MSG="‚ùå Sensor n√£o detectado durante todo o percurso"
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro PARAR_ESCANEAMENTO_MULTITASK]
description: Para o escaneamento multitask imediatamente
gcode:
    SET_GCODE_VARIABLE MACRO=_CONTROLE_MULTITASK VARIABLE=escaneamento_ativo VALUE=0
    UPDATE_DELAYED_GCODE ID=ciclo_descida_multitask DURATION=0
    RESPOND MSG="üõë Escaneamento multitask interrompido pelo usu√°rio"

[gcode_macro TESTE_SENSOR_CONTINUO]
description: Teste cont√≠nuo do sensor por 10 segundos
gcode:
    RESPOND MSG="‚ö° TESTE CONT√çNUO TP223 - 10 segundos"
    
    # Inicializar teste
    SET_GCODE_VARIABLE MACRO=_CONTROLE_TESTE_CONTINUO VARIABLE=teste_ativo VALUE=1
    SET_GCODE_VARIABLE MACRO=_CONTROLE_TESTE_CONTINUO VARIABLE=contador VALUE=0
    
    # Iniciar ciclo de teste
    UPDATE_DELAYED_GCODE ID=ciclo_teste_continuo DURATION=1.0

[gcode_macro ESCANEAMENTO_DELAY_EXTREMO]
description: Escaneamento com delay extremo de 2 segundos
gcode:
    RESPOND MSG="üéØ ESCANEAMENTO DELAY EXTREMO - 2 segundos entre movimentos"
    
    # Posicionamento inicial
    G90
    G1 X320 Y100 F3000
    G1 Z10 F1000
    
    # Inicializar vari√°veis
    SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=sensor_detectado VALUE=0
    SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=altura_atual VALUE=10.0
    SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=escaneamento_ativo VALUE=1
    SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=passo_descida VALUE=0.5
    
    RESPOND MSG="üìã Iniciando descida com delay extremo..."
    
    # Iniciar o ciclo de descida
    UPDATE_DELAYED_GCODE ID=ciclo_descida_extremo DURATION=2.0

[gcode_macro _CONTROLE_TESTE_CONTINUO]
variable_teste_ativo: 0
variable_contador: 0
gcode:
    # Controle do teste cont√≠nuo

[delayed_gcode ciclo_teste_continuo]
initial_duration: 0
gcode:
    {% set controle = printer['gcode_macro _CONTROLE_TESTE_CONTINUO'] %}
    
    {% if controle.teste_ativo == 1 and controle.contador < 100 %}
        {% if printer['gcode_button sensor_tp223_teste'].state == 'PRESSED' %}
            RESPOND MSG="üîç SENSOR ATIVADO no ciclo {controle.contador}!"
        {% else %}
            RESPOND MSG="‚ö™ Ciclo {controle.contador}: Sensor n√£o ativo"
        {% endif %}
        
        SET_GCODE_VARIABLE MACRO=_CONTROLE_TESTE_CONTINUO VARIABLE=contador VALUE={controle.contador + 1}
        UPDATE_DELAYED_GCODE ID=ciclo_teste_continuo DURATION=1.0
    {% else %}
        SET_GCODE_VARIABLE MACRO=_CONTROLE_TESTE_CONTINUO VARIABLE=teste_ativo VALUE=0
        RESPOND MSG="‚úÖ Teste cont√≠nuo finalizado"
    {% endif %}

[gcode_macro _CONTROLE_EXTREMO]
variable_sensor_detectado: 0
variable_altura_atual: 10.0
variable_escaneamento_ativo: 0
variable_passo_descida: 0.5
gcode:
    # Macro de controle de vari√°veis para teste extremo

[delayed_gcode ciclo_descida_extremo]
initial_duration: 0
gcode:
    # Verificar se o escaneamento ainda est√° ativo
    {% set controle = printer['gcode_macro _CONTROLE_EXTREMO'] %}
    
    {% if controle.escaneamento_ativo == 1 %}
        # Verificar estado do sensor ANTES do movimento
        {% if printer['gcode_button sensor_tp223_teste'].state == 'PRESSED' %}
            RESPOND MSG="üîç SENSOR ATIVADO! Posi√ß√£o: X{printer.toolhead.position.x} Y{printer.toolhead.position.y} Z{printer.toolhead.position.z}"
            SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=sensor_detectado VALUE=1
            SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=escaneamento_ativo VALUE=0
            
            # Parada suave
            M400  # Aguardar movimentos pendentes
            G91   # Modo relativo
            G1 Z2 F500  # Subir 2mm devagar
            G90   # Modo absoluto
            
            RESPOND MSG="‚úÖ Sensor detectado com sucesso no teste extremo!"
            RESPOND MSG="üìç Altura de detec√ß√£o: Z{printer.toolhead.position.z}mm"
        {% else %}
            # Sensor n√£o ativado, continuar descida
            {% set nova_altura = controle.altura_atual - controle.passo_descida %}
            
            {% if nova_altura >= 0.5 %}
                # Movimento de descida
                G1 Z{nova_altura} F200
                SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=altura_atual VALUE={nova_altura}
                
                RESPOND MSG="üìç Z={nova_altura}mm - Sensor n√£o ativado, aguardando 2 segundos..."
                
                # Programar pr√≥ximo ciclo com delay extremo
                UPDATE_DELAYED_GCODE ID=ciclo_descida_extremo DURATION=2.0
            {% else %}
                # Chegou ao limite m√≠nimo
                SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=escaneamento_ativo VALUE=0
                RESPOND MSG="‚ö†Ô∏è Chegou ao limite m√≠nimo Z=0.5mm no teste extremo"
                RESPOND MSG="‚ùå Sensor n√£o detectado durante todo o percurso"
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro PARAR_TESTE_CONTINUO]
description: Para o teste cont√≠nuo
gcode:
    SET_GCODE_VARIABLE MACRO=_CONTROLE_TESTE_CONTINUO VARIABLE=teste_ativo VALUE=0
    UPDATE_DELAYED_GCODE ID=ciclo_teste_continuo DURATION=0
    RESPOND MSG="üõë Teste cont√≠nuo interrompido"

[gcode_macro PARAR_ESCANEAMENTO_EXTREMO]
description: Para o escaneamento com delay extremo
gcode:
    SET_GCODE_VARIABLE MACRO=_CONTROLE_EXTREMO VARIABLE=escaneamento_ativo VALUE=0
    UPDATE_DELAYED_GCODE ID=ciclo_descida_extremo DURATION=0
    RESPOND MSG="üõë Escaneamento extremo interrompido"

# CONFIGURA√á√ÉO DE PROBE NATIVO COMO ALTERNATIVA
[gcode_macro ESCANEAMENTO_PROBE_NATIVO]
description: Usa o sistema de probe nativo do Klipper
gcode:
    RESPOND MSG="üéØ ESCANEAMENTO COM PROBE NATIVO"
    
    # Posicionamento
    G90
    G1 X320 Y100 F3000
    G1 Z10 F1000
    
    # Usar probe nativo (se configurado)
    {% if printer.probe is defined %}
        PROBE
        RESPOND MSG="‚úÖ Probe detectado em Z={printer.probe.last_z_result}mm"
    {% else %}
        RESPOND MSG="‚ùå Probe n√£o configurado no sistema"
    {% endif %}

[gcode_macro STATUS_MULTITASK]
description: Mostra status do sistema multitask
gcode:
    {% set controle = printer['gcode_macro _CONTROLE_MULTITASK'] %}
    {% set teste = printer['gcode_macro _CONTROLE_TESTE_CONTINUO'] %}
    {% set controle_extremo = printer['gcode_macro _CONTROLE_EXTREMO'] %}
    
    RESPOND MSG="üìä STATUS SISTEMA MULTITASK:"
    RESPOND MSG="   Escaneamento ativo: {controle.escaneamento_ativo}"
    RESPOND MSG="   Altura atual: {controle.altura_atual}mm"
    RESPOND MSG="   Sensor detectado: {controle.sensor_detectado}"
    RESPOND MSG="   Teste cont√≠nuo: {teste.teste_ativo}"
    RESPOND MSG="   Contador teste: {teste.contador}"
    RESPOND MSG="   Teste extremo ativo: {controle_extremo.escaneamento_ativo}"
    RESPOND MSG="   Altura extremo: {controle_extremo.altura_atual}mm"
    RESPOND MSG="   Estado sensor: {printer['gcode_button sensor_tp223_teste'].state}"