#####################################################################
#                    SISTEMA DE CALIBRA√á√ÉO AUTOM√ÅTICA              #
#                     Tool Offsets Auto-Calibration                #
#####################################################################

#####################################################################
#                    CALIBRA√á√ÉO COMPLETA AUTOM√ÅTICA               #
#####################################################################

[gcode_macro CAL_FULL]
description: Sequ√™ncia completa de calibra√ß√£o autom√°tica da impressora
gcode:
    RESPOND MSG="üöÄ ===== INICIANDO CALIBRA√á√ÉO COMPLETA ====="
    RESPOND MSG="‚è±Ô∏è Tempo estimado: 15-20 minutos"
    
    # 1. Verifica√ß√µes iniciais de seguran√ßa
    RESPOND MSG="üîç 1/7 - Verifica√ß√µes de seguran√ßa..."
    {% if printer.toolhead.homed_axes != "xyz" %}
        RESPOND MSG="üìç Fazendo homing completo..."
        G28
    {% endif %}
    
    # Verificar se h√° filamento carregado
    {% if printer.extruder.temperature < 150 %}
        RESPOND MSG="‚ö†Ô∏è Aquecendo extrusor para verifica√ß√µes..."
        M104 S200
    {% endif %}
    
    # 2. Aquecimento inteligente
    RESPOND MSG="üî• 2/7 - Aquecimento inteligente..."
    {% set bed_temp = params.BED_TEMP|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200)|int %}
    
    M140 S{bed_temp}      # Iniciar aquecimento da mesa
    M104 S{extruder_temp} # Iniciar aquecimento do extrusor
    
    RESPOND MSG="üå°Ô∏è Aguardando temperaturas: Mesa {bed_temp}¬∞C, Extrusor {extruder_temp}¬∞C"
    M190 S{bed_temp}      # Aguardar mesa
    M109 S{extruder_temp} # Aguardar extrusor
    
    # 3. Nivelamento Z autom√°tico aprimorado
    RESPOND MSG="üìê 3/7 - Nivelamento Z aprimorado..."
    Z_TILT_ADJUST_ENHANCED
    
    # 4. Bed mesh adaptativo
    RESPOND MSG="üó∫Ô∏è 4/7 - Criando bed mesh adaptativo..."
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    
    # 5. Calibra√ß√£o de tool offsets
    RESPOND MSG="üîß 5/7 - Calibrando tool offsets..."
    CAL_TOOLS
    
    # 6. Verifica√ß√£o de qualidade
    RESPOND MSG="‚úÖ 6/7 - Verifica√ß√£o de qualidade..."
    VERIF_QUALIDADE
    
    # 7. Finaliza√ß√£o e relat√≥rios
    RESPOND MSG="üìã 7/7 - Gerando relat√≥rios finais..."
    REP_CAL
    
    # Salvar configura√ß√£o
    SAVE_CONFIG
    
    RESPOND MSG="üéâ ===== CALIBRA√á√ÉO COMPLETA FINALIZADA ====="
    RESPOND MSG="‚úÖ Impressora calibrada e pronta para uso!"
    RESPOND MSG="üíæ Configura√ß√µes salvas automaticamente"
    RESPOND MSG="üîÑ Reinicializando para aplicar mudan√ßas..."
    
    # Posi√ß√£o final segura
    G90
    G0 X150 Y100 Z50 F3000
    
    # Desligar aquecedores
    M104 S0
    M140 S0

[gcode_macro CAL_FAST]
description: Calibra√ß√£o r√°pida para uso di√°rio (5-7 minutos)
gcode:
    RESPOND MSG="‚ö° ===== CALIBRA√á√ÉO R√ÅPIDA ====="
    RESPOND MSG="‚è±Ô∏è Tempo estimado: 5-7 minutos"
    
    # Homing se necess√°rio
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}
    
    # Aquecimento b√°sico
    {% set bed_temp = params.BED_TEMP|default(60)|int %}
    M140 S{bed_temp}
    M190 S{bed_temp}
    
    # Z-Tilt r√°pido
    RESPOND MSG="üìê Nivelamento Z..."
    Z_TILT_ADJUST
    
    # Bed mesh r√°pido (3x3)
    RESPOND MSG="üó∫Ô∏è Bed mesh r√°pido..."
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE MESH_MIN=40,20 MESH_MAX=260,130 PROBE_COUNT=3,3
    
    # Verifica√ß√£o b√°sica de offsets
    RESPOND MSG="üîß Verifica√ß√£o de offsets..."
    {% for tool in range(1, 5) %}
        CAL_QUICK TOOL={tool}
    {% endfor %}
    
    RESPOND MSG="‚ö° Calibra√ß√£o r√°pida conclu√≠da!"
    
    # Posi√ß√£o segura
    G0 X150 Y100 Z20 F3000
    M140 S0

# Vari√°veis globais para calibra√ß√£o
[gcode_macro CALIBRATION_DATA]
variable_reference_tool: 0                    # Ferramenta de refer√™ncia (T0 - com BLTouch)
variable_calibration_points: []               # Pontos de medi√ß√£o
variable_temp_extruder: 200                   # Temperatura para calibra√ß√£o
variable_temp_bed: 60                         # Temperatura da mesa
variable_probe_speed: 5                       # Velocidade de probe
variable_probe_samples: 3                     # Amostras por ponto
variable_safe_z: 10                           # Altura segura
variable_calibration_active: False            # Status da calibra√ß√£o
variable_paper_thickness: 0.1                 # Espessura do papel (mm)
variable_nozzle_contact_offset: 0.0           # Offset de contato do bico
gcode:
    # Macro de dados - n√£o executa c√≥digo

#####################################################################
#                    CALIBRA√á√ÉO AUTOM√ÅTICA DE OFFSETS             #
#####################################################################

[gcode_macro CAL_TOOLS]
description: Calibra√ß√£o autom√°tica de offsets para todas as ferramentas
gcode:
    RESPOND MSG="üîß Iniciando calibra√ß√£o autom√°tica de tool offsets..."
    
    # Verifica√ß√µes de seguran√ßa
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        RESPOND MSG="‚ö†Ô∏è Fazendo homing completo..."
        G28
    {% endif %}
    
    # Marcar calibra√ß√£o como ativa
    SET_GCODE_VARIABLE MACRO=CALIBRATION_DATA VARIABLE=calibration_active VALUE=True
    
    # Aquecimento inteligente (mesa + extrusores para limpeza de bico)
    RESPOND MSG="üî• Aquecendo para calibra√ß√£o..."
    M104 S{printer['gcode_macro CALIBRATION_DATA'].temp_extruder}  # Extrusor
    M140 S{printer['gcode_macro CALIBRATION_DATA'].temp_bed}       # Mesa
    
    # Aguardar temperaturas
    M109 S{printer['gcode_macro CALIBRATION_DATA'].temp_extruder}
    M190 S{printer['gcode_macro CALIBRATION_DATA'].temp_bed}
    
    # Nivelamento Z autom√°tico
    RESPOND MSG="üìê Executando nivelamento Z..."
    Z_TILT_ADJUST_ENHANCED
    
    # Calibrar cada ferramenta
    {% for tool_num in range(1, 5) %}  # T1 a T4
        {% if printer['gcode_macro TOOL_DATA']['tool_' ~ tool_num ~ '_enabled']|default(True) %}
            CAL_SINGLE TOOL={tool_num}
        {% endif %}
    {% endfor %}
    
    # Finalizar calibra√ß√£o
    SET_GCODE_VARIABLE MACRO=CALIBRATION_DATA VARIABLE=calibration_active VALUE=False
    
    # Relat√≥rio final
    REP_CAL
    
    RESPOND MSG="‚úÖ Calibra√ß√£o autom√°tica conclu√≠da!"

#####################################################################
#                    CALIBRA√á√ÉO INDIVIDUAL POR FERRAMENTA         #
#####################################################################

[gcode_macro CAL_SINGLE]
description: Calibra offsets de uma ferramenta espec√≠fica
gcode:
    {% set tool = params.TOOL|int %}
    {% set ref_tool = printer['gcode_macro CALIBRATION_DATA'].reference_tool|int %}
    
    RESPOND MSG="üîß Calibrando T{tool}..."
    
    # Ativar ferramenta
    T{tool}
    
    # Aguardar estabiliza√ß√£o
    G4 P2000
    
    # Definir pontos de medi√ß√£o (5 pontos para maior precis√£o)
    {% set points = [
        [50, 50],    # Canto inferior esquerdo
        [230, 50],   # Canto inferior direito
        [140, 100],  # Centro
        [50, 130],   # Canto superior esquerdo
        [230, 130]   # Canto superior direito
    ] %}
    
    {% set z_measurements = [] %}
    {% set x_positions = [] %}
    {% set y_positions = [] %}
    
    # Medir cada ponto
    {% for point in points %}
        {% set x = point[0] %}
        {% set y = point[1] %}
        
        RESPOND MSG="üìç Medindo ponto ({x}, {y})..."
        
        # Mover para posi√ß√£o segura
        G90
        G0 Z{printer['gcode_macro CALIBRATION_DATA'].safe_z} F600
        G0 X{x} Y{y} F3000
        
        # Fazer m√∫ltiplas medi√ß√µes para precis√£o
        {% set samples = [] %}
        {% for sample in range(printer['gcode_macro CALIBRATION_DATA'].probe_samples) %}
            # Usar BLTouch para T0 (refer√™ncia) e sensor piezoel√©trico para outras ferramentas
            {% if tool == ref_tool %}
                PROBE
                {% set z_result = printer.probe.last_z_result %}
            {% else %}
                # Usar sensor piezoel√©trico para ferramentas T1-T3
                USE_PIEZO_PROBE
                PROBE
                {% set z_result = printer.probe.last_z_result|float %}
                USE_BLTOUCH_PROBE
            {% endif %}
            {% set _ = samples.append(z_result) %}
        {% endfor %}
        
        # Calcular m√©dia das amostras
        {% set avg_z = (samples|sum / samples|length) %}
        {% set _ = z_measurements.append(avg_z) %}
        {% set _ = x_positions.append(x) %}
        {% set _ = y_positions.append(y) %}
        
        RESPOND MSG="{'üìä Z m√©dio: ' ~ (avg_z|round(4)) ~ 'mm'}"
    {% endfor %}
    
    # Calcular offsets baseado na ferramenta de refer√™ncia
    {% if tool != ref_tool %}
        CALC_OFS TOOL={tool} Z_MEASUREMENTS="{z_measurements|join(',')}"
    {% else %}
        RESPOND MSG="{'üìå T' ~ tool ~ ' √© a ferramenta de refer√™ncia'}"
        # Salvar medi√ß√µes de refer√™ncia
        SAVE_VARIABLE VARIABLE=ref_z_measurements VALUE="{z_measurements|join(',')}"
    {% endif %}
    
    # Retornar √† altura segura
    G0 Z{printer['gcode_macro CALIBRATION_DATA'].safe_z} F600

#####################################################################
#                    C√ÅLCULO DE OFFSETS                           #
#####################################################################

[gcode_macro CALC_OFS]
description: Calcula e aplica offsets baseado nas medi√ß√µes
gcode:
    {% set tool = params.TOOL|int %}
    {% set measurements = params.Z_MEASUREMENTS.split(',') %}
    {% set ref_tool = printer['gcode_macro CALIBRATION_DATA'].reference_tool|int %}
    
    # Obter medi√ß√µes de refer√™ncia
    {% if 'ref_z_measurements' in printer.save_variables.variables %}
        {% set ref_measurements = printer.save_variables.variables.ref_z_measurements.split(',') %}
    {% else %}
        RESPOND MSG="‚ùå Erro: Medi√ß√µes de refer√™ncia n√£o encontradas. Execute primeiro a calibra√ß√£o da ferramenta de refer√™ncia."
        {% set ref_measurements = [] %}
    {% endif %}
    
    # Calcular diferen√ßas Z
    {% if ref_measurements|length > 0 %}
        {% set z_diffs = [] %}
        {% for i in range(measurements|length) %}
            {% if i < ref_measurements|length %}
                {% set diff = measurements[i]|float - ref_measurements[i]|float %}
                {% set _ = z_diffs.append(diff) %}
            {% endif %}
        {% endfor %}
        
        # Calcular offset Z m√©dio
        {% if z_diffs|length > 0 %}
            {% set z_offset = (z_diffs|sum / z_diffs|length) %}
        {% else %}
            {% set z_offset = 0.0 %}
            RESPOND MSG="‚ùå Erro: N√£o foi poss√≠vel calcular offset - dados insuficientes."
        {% endif %}
    {% else %}
        {% set z_offset = 0.0 %}
        RESPOND MSG="‚ùå Erro: Medi√ß√µes de refer√™ncia vazias. Calibra√ß√£o cancelada."
    {% endif %}
    
    RESPOND MSG="{'üìä T' ~ tool ~ ' - Offset Z calculado: ' ~ (z_offset|round(4)) ~ 'mm'}"
    
    # Aplicar offset calculado
    {% set current_z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool]|default(0.0)|float %}
    {% set new_z_offset = current_z_offset + z_offset %}
    
    # Salvar novo offset
    SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool} VALUE={new_z_offset}
    SAVE_VARIABLE VARIABLE=tool_{tool}_offset_z VALUE={new_z_offset}
    
    RESPOND MSG="{'‚úÖ T' ~ tool ~ ' - Novo offset Z: ' ~ (new_z_offset|round(4)) ~ 'mm'}"
    
    # Verificar se offset est√° dentro de limites aceit√°veis
    {% if z_offset|abs > 0.5 %}
        RESPOND MSG="{'‚ö†Ô∏è ATEN√á√ÉO: Offset Z muito grande (' ~ (z_offset|round(4)) ~ 'mm) - Verificar hardware!'}"
    {% elif z_offset|abs > 0.2 %}
        RESPOND MSG="{'‚ö†Ô∏è Offset Z significativo (' ~ (z_offset|round(4)) ~ 'mm) - Monitorar'}"
    {% else %}
        RESPOND MSG="{'‚úÖ Offset Z dentro do normal (' ~ (z_offset|round(4)) ~ 'mm)'}"
    {% endif %}

#####################################################################
#                    CALIBRA√á√ÉO R√ÅPIDA (SINGLE POINT)             #
#####################################################################

[gcode_macro CAL_QUICK]
description: Calibra√ß√£o r√°pida de offset Z para uma ferramenta
gcode:
    {% set tool = params.TOOL|int %}
    {% set ref_tool = printer['gcode_macro CALIBRATION_DATA'].reference_tool|int %}
    
    RESPOND MSG="‚ö° Calibra√ß√£o r√°pida T{tool}..."
    
    # Verificar homing
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
    # Ponto central para medi√ß√£o r√°pida
    {% set x_center = 140 %}
    {% set y_center = 100 %}
    
    # Medir ferramenta de refer√™ncia (sempre com BLTouch)
    T{ref_tool}
    G4 P1000
    G90
    G0 Z10 F600
    G0 X{x_center} Y{y_center} F3000
    G30
    {% set ref_z = printer.probe.last_z_result %}
    
    # Medir ferramenta alvo
    T{tool}
    G4 P1000
    {% if tool == ref_tool %}
        # Usar BLTouch para ferramenta de refer√™ncia
        G30
        {% set tool_z = printer.probe.last_z_result %}
    {% else %}
        # Usar sensor piezoel√©trico para outras ferramentas
        # Alternar para probe piezoel√©trico
        USE_PIEZO_PROBE
        # Mover para posi√ß√£o do sensor piezoel√©trico
        G0 X150 Y150 F3000
        PROBE
        {% set tool_z = printer.probe.last_z_result|float %}
        # Voltar para BLTouch
        USE_BLTOUCH_PROBE
    {% endif %}
    
    # Calcular e aplicar offset
    {% set z_diff = tool_z - ref_z %}
    {% set current_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool]|default(0.0)|float %}
    {% set new_offset = current_offset + z_diff %}
    
    SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool} VALUE={new_offset}
    SAVE_VARIABLE VARIABLE=tool_{tool}_offset_z VALUE={new_offset}
    
    RESPOND MSG="{'‚ö° T' ~ tool ~ ' - Offset r√°pido: ' ~ (z_diff|round(4)) ~ 'mm (Total: ' ~ (new_offset|round(4)) ~ 'mm)'}"
    
    G0 Z10 F600

#####################################################################
#                    RELAT√ìRIO DE CALIBRA√á√ÉO                      #
#####################################################################

[gcode_macro REP_CAL]
description: Gera relat√≥rio detalhado da calibra√ß√£o
gcode:
    RESPOND MSG="üìã ===== RELAT√ìRIO DE CALIBRA√á√ÉO ====="
    RESPOND MSG="üìÖ Data: {printer.system_stats.cputime|int}"
    RESPOND MSG="üå°Ô∏è Temp. Extrusor: {printer['gcode_macro CALIBRATION_DATA'].temp_extruder}¬∞C"
    RESPOND MSG="üå°Ô∏è Temp. Mesa: {printer['gcode_macro CALIBRATION_DATA'].temp_bed}¬∞C"
    RESPOND MSG="üìê Ferramenta Refer√™ncia: T{printer['gcode_macro CALIBRATION_DATA'].reference_tool}"
    RESPOND MSG=""
    RESPOND MSG="üìä OFFSETS ATUAIS:"
    
    {% for tool_num in range(1, 5) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% set x_offset = printer['gcode_macro TOOL_DATA']['offset_x' ~ tool_num]|default(0.0)|float %}
        {% set y_offset = printer['gcode_macro TOOL_DATA']['offset_y' ~ tool_num]|default(0.0)|float %}
        
        RESPOND MSG="{'üîß T' ~ tool_num ~ ': X=' ~ (x_offset|round(3)) ~ ' Y=' ~ (y_offset|round(3)) ~ ' Z=' ~ (z_offset|round(4)) ~ ''}"
    {% endfor %}
    
    RESPOND MSG=""
    RESPOND MSG="‚úÖ Calibra√ß√£o conclu√≠da com sucesso!"
    RESPOND MSG="üíæ Offsets salvos automaticamente"
    RESPOND MSG="üîÑ Use RESTART para aplicar mudan√ßas"

#####################################################################
#                    UTILIT√ÅRIOS DE CALIBRA√á√ÉO                    #
#####################################################################

[gcode_macro RST_OFS]
description: Reseta todos os offsets para zero
gcode:
    RESPOND MSG="üîÑ Resetando todos os tool offsets..."
    
    {% for tool_num in range(1, 5) %}
        SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_x{tool_num} VALUE=0.0
        SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_y{tool_num} VALUE=0.0
        SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool_num} VALUE=0.0
        SAVE_VARIABLE VARIABLE=tool_{tool_num}_offset_x VALUE=0.0
        SAVE_VARIABLE VARIABLE=tool_{tool_num}_offset_y VALUE=0.0
        SAVE_VARIABLE VARIABLE=tool_{tool_num}_offset_z VALUE=0.0
    {% endfor %}
    
    RESPOND MSG="‚úÖ Todos os offsets resetados para 0.0"
    RESPOND MSG="üîÑ Use RESTART para aplicar mudan√ßas"

[gcode_macro BAK_OFS]
description: Faz backup dos offsets atuais
gcode:
    {% set timestamp = printer.system_stats.cputime|int %}
    
    RESPOND MSG="üíæ Fazendo backup dos offsets..."
    
    {% for tool_num in range(1, 5) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% set x_offset = printer['gcode_macro TOOL_DATA']['offset_x' ~ tool_num]|default(0.0)|float %}
        {% set y_offset = printer['gcode_macro TOOL_DATA']['offset_y' ~ tool_num]|default(0.0)|float %}
        
        SAVE_VARIABLE VARIABLE=backup_{timestamp}_tool_{tool_num}_x VALUE={x_offset}
        SAVE_VARIABLE VARIABLE=backup_{timestamp}_tool_{tool_num}_y VALUE={y_offset}
        SAVE_VARIABLE VARIABLE=backup_{timestamp}_tool_{tool_num}_z VALUE={z_offset}
    {% endfor %}
    
    SAVE_VARIABLE VARIABLE=last_backup_timestamp VALUE={timestamp}
    
    RESPOND MSG="‚úÖ Backup salvo com timestamp: {timestamp}"

[gcode_macro STS_CAL]
description: Mostra status atual da calibra√ß√£o
gcode:
    RESPOND MSG="üìä ===== STATUS DE CALIBRA√á√ÉO ====="
    RESPOND MSG="üîß Calibra√ß√£o ativa: {printer['gcode_macro CALIBRATION_DATA'].calibration_active}"
    RESPOND MSG="üìê Ferramenta refer√™ncia: T{printer['gcode_macro CALIBRATION_DATA'].reference_tool}"
    RESPOND MSG="üå°Ô∏è Temp. calibra√ß√£o: {printer['gcode_macro CALIBRATION_DATA'].temp_extruder}¬∞C"
    RESPOND MSG="üìè Amostras por ponto: {printer['gcode_macro CALIBRATION_DATA'].probe_samples}"
    RESPOND MSG="‚ö° Velocidade probe: {printer['gcode_macro CALIBRATION_DATA'].probe_speed}mm/s"
    
    {% if printer.save_variables.variables.last_backup_timestamp is defined %}
        RESPOND MSG="üíæ √öltimo backup: {printer.save_variables.variables.last_backup_timestamp}"
    {% else %}
        RESPOND MSG="üíæ Nenhum backup encontrado"
    {% endif %}

#####################################################################
#                    VERIFICA√á√ÉO DE QUALIDADE                     #
#####################################################################

[gcode_macro VERIF_QUALIDADE]
description: Verifica√ß√£o completa de qualidade p√≥s-calibra√ß√£o
gcode:
    RESPOND MSG="üîç ===== VERIFICA√á√ÉO DE QUALIDADE ====="
    
    # 1. Verificar precis√£o do nivelamento Z
    RESPOND MSG="üìê Verificando precis√£o do nivelamento Z..."
    CHK_LVL
    
    # 2. Verificar consist√™ncia dos offsets
    RESPOND MSG="üîß Verificando consist√™ncia dos tool offsets..."
    VERIF_OFFSETS
    
    # 3. Verificar qualidade do bed mesh
    RESPOND MSG="üó∫Ô∏è Verificando qualidade do bed mesh..."
    VERIFICAR_QUALIDADE_MESH
    
    # 4. Teste de primeira camada simulado
    RESPOND MSG="üìè Simulando teste de primeira camada..."
    TESTE_CAMADA
    
    RESPOND MSG="‚úÖ Verifica√ß√£o de qualidade conclu√≠da!"

[gcode_macro CHK_LVL]
description: Verifica a precis√£o do nivelamento Z
gcode:
    # Medir pontos de nivelamento novamente
    G90
    G0 Z10 F600
    
    # Ponto esquerdo
    G0 X0 Y100 F3000
    PROBE
    {% set z_left = printer.probe.last_z_result %}
    
    # Ponto direito
    G0 X260 Y100 F3000
    PROBE
    {% set z_right = printer.probe.last_z_result %}
    
    # Calcular diferen√ßa
    {% set diff = (z_left - z_right)|abs %}
    
    {% if diff <= 0.02 %}
        RESPOND MSG="{'‚úÖ Nivelamento Z excelente: ' ~ (diff|round(4)) ~ 'mm'}"
    {% elif diff <= 0.05 %}
        RESPOND MSG="{'‚ö†Ô∏è Nivelamento Z aceit√°vel: ' ~ (diff|round(4)) ~ 'mm'}"
    {% else %}
        RESPOND MSG="{'‚ùå Nivelamento Z problem√°tico: ' ~ (diff|round(4)) ~ 'mm - Requer aten√ß√£o!'}"
    {% endif %}
    
    G0 Z10 F600

[gcode_macro VERIF_OFFSETS]
description: Verifica se os offsets est√£o dentro de limites aceit√°veis
gcode:
    {% set problemas = [] %}
    
    {% for tool_num in range(1, 5) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% set x_offset = printer['gcode_macro TOOL_DATA']['offset_x' ~ tool_num]|default(0.0)|float %}
        {% set y_offset = printer['gcode_macro TOOL_DATA']['offset_y' ~ tool_num]|default(0.0)|float %}
        
        # Verificar limites Z (¬±0.5mm)
        {% if z_offset|abs > 0.5 %}
            {% set _ = problemas.append("T" ~ tool_num ~ " Z offset muito grande: " ~ z_offset ~ "mm") %}
        {% endif %}
        
        # Verificar limites X/Y (¬±2.0mm)
        {% if x_offset|abs > 2.0 %}
            {% set _ = problemas.append("T" ~ tool_num ~ " X offset muito grande: " ~ x_offset ~ "mm") %}
        {% endif %}
        
        {% if y_offset|abs > 2.0 %}
            {% set _ = problemas.append("T" ~ tool_num ~ " Y offset muito grande: " ~ y_offset ~ "mm") %}
        {% endif %}
    {% endfor %}
    
    {% if problemas|length == 0 %}
        RESPOND MSG="‚úÖ Todos os offsets est√£o dentro dos limites aceit√°veis"
    {% else %}
        RESPOND MSG="‚ö†Ô∏è Problemas detectados nos offsets:"
        {% for problema in problemas %}
            RESPOND MSG="   - {problema}"
        {% endfor %}
    {% endif %}

[gcode_macro VERIFICAR_QUALIDADE_MESH]
description: Analisa a qualidade do bed mesh
gcode:
    {% if printer.bed_mesh.mesh_matrix %}
        {% set mesh = printer.bed_mesh.mesh_matrix %}
        {% set min_val = mesh|map('min')|min %}
        {% set max_val = mesh|map('max')|max %}
        {% set range_val = max_val - min_val %}
        
        RESPOND MSG="üìä An√°lise do Bed Mesh:"
        RESPOND MSG="{'   Valor m√≠nimo: ' ~ (min_val|round(4)) ~ 'mm'}"
        RESPOND MSG="{'   Valor m√°ximo: ' ~ (max_val|round(4)) ~ 'mm'}"
        RESPOND MSG="{'   Varia√ß√£o total: ' ~ (range_val|round(4)) ~ 'mm'}"
        
        {% if range_val <= 0.1 %}
            RESPOND MSG="‚úÖ Mesa muito plana (varia√ß√£o ‚â§ 0.1mm)"
        {% elif range_val <= 0.2 %}
            RESPOND MSG="‚úÖ Mesa boa (varia√ß√£o ‚â§ 0.2mm)"
        {% elif range_val <= 0.5 %}
            RESPOND MSG="‚ö†Ô∏è Mesa aceit√°vel (varia√ß√£o ‚â§ 0.5mm)"
        {% else %}
            RESPOND MSG="‚ùå Mesa irregular (varia√ß√£o > 0.5mm) - Considerar ajustes mec√¢nicos"
        {% endif %}
    {% else %}
        RESPOND MSG="‚ùå Nenhum bed mesh ativo encontrado"
    {% endif %}

[gcode_macro TESTE_CAMADA]
description: Simula teste de primeira camada em pontos cr√≠ticos
gcode:
    RESPOND MSG="üìè Testando altura de primeira camada..."
    
    # Pontos cr√≠ticos para teste
    {% set test_points = [
        [50, 50, "Canto inferior esquerdo"],
        [230, 50, "Canto inferior direito"],
        [140, 100, "Centro"],
        [50, 130, "Canto superior esquerdo"],
        [230, 130, "Canto superior direito"]
    ] %}
    
    {% set problemas = [] %}
    
    {% for point in test_points %}
        {% set x = point[0] %}
        {% set y = point[1] %}
        {% set desc = point[2] %}
        
        # Mover para ponto
        G90
        G0 Z5 F600
        G0 X{x} Y{y} F3000
        
        # Simular altura de primeira camada (0.2mm)
        G0 Z0.2 F300
        G4 P500  # Pausa para "simular" extrus√£o
        
        # Verificar se a altura √© segura
        {% set current_z = printer.toolhead.position.z %}
        {% if current_z < 0.15 or current_z > 0.25 %}
            {% set _ = problemas.append(desc ~ ": altura suspeita (" ~ current_z ~ "mm)") %}
        {% endif %}
    {% endfor %}
    
    {% if problemas|length == 0 %}
        RESPOND MSG="‚úÖ Simula√ß√£o de primeira camada: todas as alturas OK"
    {% else %}
        RESPOND MSG="‚ö†Ô∏è Problemas detectados na simula√ß√£o:"
        {% for problema in problemas %}
            RESPOND MSG="   - {problema}"
        {% endfor %}
    {% endif %}
    
    # Retornar √† altura segura
    G0 Z10 F600

[gcode_macro RELAT_CALIB]
description: Relat√≥rio detalhado da calibra√ß√£o completa
gcode:
    RESPOND MSG="üìã ===== RELAT√ìRIO COMPLETO DE CALIBRA√á√ÉO ====="
    RESPOND MSG="üìÖ Data/Hora: {printer.system_stats.cputime|int}"
    RESPOND MSG="üñ®Ô∏è Impressora: Multi-Tool CoreXY"
    RESPOND MSG=""    
    # Informa√ß√µes de temperatura
    RESPOND MSG="üå°Ô∏è TEMPERATURAS DE CALIBRA√á√ÉO:"
    RESPOND MSG="{'   Mesa: ' ~ printer.heater_bed.target ~ '¬∞C (atual: ' ~ (printer.heater_bed.temperature|round(1)) ~ '¬∞C)'}"
    RESPOND MSG="{'   Extrusor: ' ~ printer.extruder.target ~ '¬∞C (atual: ' ~ (printer.extruder.temperature|round(1)) ~ '¬∞C)'}"
    RESPOND MSG=""    
    # Status do nivelamento
    RESPOND MSG="üìê NIVELAMENTO Z:"
    RESPOND MSG="   Retries configurados: {printer.configfile.settings.z_tilt.retries}"
    RESPOND MSG="   Toler√¢ncia: {printer.configfile.settings.z_tilt.retry_tolerance}mm"
    RESPOND MSG="   Status: ‚úÖ Conclu√≠do com sucesso"
    RESPOND MSG=""    
    # Bed mesh
    RESPOND MSG="üó∫Ô∏è BED MESH:"
    {% if printer.bed_mesh.mesh_matrix %}
        {% set mesh = printer.bed_mesh.mesh_matrix %}
        {% set min_val = mesh|map('min')|min %}
        {% set max_val = mesh|map('max')|max %}
        RESPOND MSG="{'   Pontos: ' ~ mesh|length ~ 'x' ~ mesh[0]|length}"
        RESPOND MSG="{'   Varia√ß√£o: ' ~ ((max_val - min_val)|round(4)) ~ 'mm'}"
        RESPOND MSG="   Status: ‚úÖ Ativo"
    {% else %}
        RESPOND MSG="   Status: ‚ùå N√£o encontrado"
    {% endif %}
    RESPOND MSG=""    
    # Tool offsets
    RESPOND MSG="üîß TOOL OFFSETS FINAIS:"
    {% for tool_num in range(1, 5) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% set x_offset = printer['gcode_macro TOOL_DATA']['offset_x' ~ tool_num]|default(0.0)|float %}
        {% set y_offset = printer['gcode_macro TOOL_DATA']['offset_y' ~ tool_num]|default(0.0)|float %}
        
        RESPOND MSG="{'   T' ~ tool_num ~ ': X=' ~ ('%+.3f'|format(x_offset)) ~ ' Y=' ~ ('%+.3f'|format(y_offset)) ~ ' Z=' ~ ('%+.4f'|format(z_offset)) ~ 'mm'}"
    {% endfor %}
    RESPOND MSG=""    
    # Recomenda√ß√µes
    RESPOND MSG="üí° RECOMENDA√á√ïES:"
    RESPOND MSG="   ‚úÖ Execute CALIBRACAO_RAPIDA antes de impress√µes importantes"
    RESPOND MSG="   ‚úÖ Monitore a primeira camada de cada impress√£o"
    RESPOND MSG="   ‚úÖ Refa√ßa calibra√ß√£o completa a cada 50-100 horas de uso"
    RESPOND MSG="   ‚úÖ Use BACKUP_OFFSETS antes de grandes mudan√ßas"
    RESPOND MSG=""    
    RESPOND MSG="üéØ CALIBRA√á√ÉO COMPLETA FINALIZADA COM SUCESSO!"
    RESPOND MSG="üíæ Todas as configura√ß√µes foram salvas automaticamente"

#####################################################################
#           CALIBRA√á√ÉO ESPECIALIZADA PARA BLTOUCH FIXO            #
#####################################################################

[gcode_macro CALIB_Z_BLT]
description: Calibra√ß√£o de Z offsets para configura√ß√£o com BLTouch fixo no T0
gcode:
    RESPOND MSG="üéØ ===== CALIBRA√á√ÉO Z OFFSETS - BLTOUCH FIXO ====="
    RESPOND MSG="üìå T0 √© a refer√™ncia (BLTouch fixo)"
    RESPOND MSG="üîß Calibrando T1, T2, T3 relativos ao T0"
    
    # Verifica√ß√µes iniciais
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        RESPOND MSG="‚ö†Ô∏è Fazendo homing completo..."
        G28
    {% endif %}
    
    # Aquecimento completo (mesa + extrusores para limpeza de bico)
    RESPOND MSG="üî• Aquecendo para calibra√ß√£o..."
    M104 S{printer['gcode_macro CALIBRATION_DATA'].temp_extruder}
    M140 S{printer['gcode_macro CALIBRATION_DATA'].temp_bed}
    M109 S{printer['gcode_macro CALIBRATION_DATA'].temp_extruder}
    M190 S{printer['gcode_macro CALIBRATION_DATA'].temp_bed}
    
    # Nivelamento Z
    RESPOND MSG="üìê Nivelamento Z..."
    Z_TILT_ADJUST_ENHANCED
    
    # Estabelecer refer√™ncia T0 com BLTouch
    RESPOND MSG="üìç Estabelecendo refer√™ncia T0 (BLTouch)..."
    ESTABELECER_REFERENCIA_T0
    
    # Calibrar primeira ferramenta (T1)
    CALIBRAR_TOOL_MANUAL_Z TOOL=1
    
    RESPOND MSG="‚è∏Ô∏è CALIBRA√á√ÉO PAUSADA"
    RESPOND MSG="üìã PR√ìXIMOS PASSOS:"
    RESPOND MSG="   1. Ajuste T1 com os comandos mostrados"
     RESPOND MSG="   2. Execute CONFIRMAR_Z_T1 quando perfeito"
     RESPOND MSG="   3. Execute CALIB_PROX para T2"
     RESPOND MSG="   4. Execute RELAT_Z_FINAL quando terminar"
     RESPOND MSG=""
     RESPOND MSG="‚úÖ Calibra√ß√£o iniciada com sucesso!"
     RESPOND MSG="üí° Agora voc√™ tem controle total do processo"

[gcode_macro CALIB_PROX]
description: Continua calibra√ß√£o para a pr√≥xima ferramenta
gcode:
    {% set current_tool = printer.save_variables.variables.current_calibrating_tool|default(1)|int %}
    {% set next_tool = current_tool + 1 %}
    
    {% if next_tool <= 2 %}  # Apenas T1 e T2 (T3 desabilitado no tools.cfg)
        CALIBRAR_TOOL_MANUAL_Z TOOL={next_tool}
        
        RESPOND MSG="‚è∏Ô∏è CALIBRA√á√ÉO PAUSADA"
        RESPOND MSG="üìã PR√ìXIMOS PASSOS:"
        RESPOND MSG="{'   1. Ajuste T' ~ next_tool ~ ' com os comandos mostrados'}"
        RESPOND MSG="{'   2. Execute CONFIRMAR_Z_T' ~ next_tool ~ ' quando perfeito'}"
        {% if next_tool < 2 %}
            RESPOND MSG="   3. Execute CALIBRAR_PROXIMA_FERRAMENTA para continuar"
        {% else %}
            RESPOND MSG="   3. Execute RELATORIO_Z_OFFSETS_FINAL quando terminar"
        {% endif %}
    {% else %}
        RESPOND MSG="‚úÖ Todas as ferramentas foram calibradas!"
        RESPOND MSG="üí° Execute RELATORIO_Z_OFFSETS_FINAL para ver o resultado"
    {% endif %}

[gcode_macro ESTABELECER_REFERENCIA_T0]
description: Estabelece T0 como refer√™ncia usando BLTouch
gcode:
    RESPOND MSG="üìç Ativando T0 (refer√™ncia com BLTouch)..."
    
    # Ativar T0
    T0
    G4 P2000  # Aguardar estabiliza√ß√£o
    
    # Ir para centro da mesa
    G90
    G0 Z10 F600
    G0 X140 Y100 F3000
    
    # Fazer medi√ß√£o de refer√™ncia com BLTouch
    RESPOND MSG="üîç Medindo altura de refer√™ncia com BLTouch..."
    BLTOUCH_DEBUG COMMAND=pin_down  # Garantir deploy
    G4 P500  # Aguardar deploy
    PROBE  # Probe com BLTouch
    {% set ref_z = printer.probe.last_z_result %}
    G0 Z10 F600  # Subir Z imediatamente ap√≥s probe
    BLTOUCH_DEBUG COMMAND=pin_up    # Garantir retra√ß√£o
    G4 P500  # Aguardar retra√ß√£o
    
    # Salvar como refer√™ncia
    SAVE_VARIABLE VARIABLE=t0_reference_z VALUE={ref_z}
    
    RESPOND MSG="{'‚úÖ T0 refer√™ncia estabelecida: Z = ' ~ (ref_z|round(4)) ~ 'mm'}"
    
    # Posi√ß√£o segura
    G0 Z15 F600  # Altura segura final

[gcode_macro CALIBRAR_TOOL_MANUAL_Z]
description: Calibra√ß√£o manual de Z offset para uma ferramenta espec√≠fica
gcode:
    {% set tool = params.TOOL|int %}
    {% set ref_z = printer.save_variables.variables.t0_reference_z|float %}
    
    RESPOND MSG="üîß ===== CALIBRANDO T{tool} ====="
    RESPOND MSG="üìã INSTRU√á√ïES:"
    RESPOND MSG="   1. Coloque papel entre bico e mesa"
    RESPOND MSG="   2. Use os comandos de movimento para ajustar"
    RESPOND MSG="   3. Quando o papel arrastar levemente, confirme"
    
    # Ativar ferramenta
    T{tool}
    G4 P2000  # Aguardar estabiliza√ß√£o
    
    # Ir para centro da mesa
    G90
    G0 Z10 F600
    G0 X140 Y100 F3000
    
    # Descer para altura pr√≥xima da mesa (baseado na refer√™ncia T0)
    {% set start_z = ref_z + 0.5 %}  # 0.5mm acima da refer√™ncia
    G0 Z{start_z} F300
    
    RESPOND MSG="{'üéØ T' ~ tool ~ ' posicionado em Z = ' ~ (start_z|round(3)) ~ 'mm'}"
    RESPOND MSG="üìÑ Coloque papel e use os comandos:"
    RESPOND MSG="   AJUSTAR_Z_BAIXO_MEDIO (desce 0.1mm)"
    RESPOND MSG="   AJUSTAR_Z_CIMA_MEDIO (sobe 0.1mm)"
    RESPOND MSG="   AJUSTAR_Z_BAIXO (desce 0.01mm)"
    RESPOND MSG="   AJUSTAR_Z_CIMA (sobe 0.01mm)"
    RESPOND MSG="   AJUSTAR_Z_BAIXO_FINO (desce 0.002mm)"
    RESPOND MSG="   AJUSTAR_Z_CIMA_FINO (sobe 0.002mm)"
    RESPOND MSG="{'   CONFIRMAR_Z_T' ~ tool ~ ' (quando estiver perfeito)'}"
    
    # Salvar estado atual para esta ferramenta
    SET_GCODE_VARIABLE MACRO=CALIBRATION_DATA VARIABLE=calibration_active VALUE=True
    SAVE_VARIABLE VARIABLE=current_calibrating_tool VALUE={tool}
    SAVE_VARIABLE VARIABLE=current_z_position VALUE={start_z}

[gcode_macro AJUSTAR_Z_BAIXO]
description: Desce Z em 0.01mm durante calibra√ß√£o
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z - 0.01 %}
        G90
        G0 Z{new_z} F100
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨áÔ∏è Z = ' ~ (new_z|round(3)) ~ 'mm'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro AJUSTAR_Z_CIMA]
description: Sobe Z em 0.01mm durante calibra√ß√£o
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z + 0.01 %}
        G90
        G0 Z{new_z} F100
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨ÜÔ∏è Z = ' ~ (new_z|round(3)) ~ 'mm'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro AJUSTAR_Z_BAIXO_FINO]
description: Desce Z em 0.002mm durante calibra√ß√£o (ajuste fino)
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z - 0.002 %}
        G90
        G0 Z{new_z} F50
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨áÔ∏èüîç Z = ' ~ (new_z|round(4)) ~ 'mm (fino)'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro AJUSTAR_Z_CIMA_FINO]
description: Sobe Z em 0.002mm durante calibra√ß√£o (ajuste fino)
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z + 0.002 %}
        G90
        G0 Z{new_z} F50
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨ÜÔ∏èüîç Z = ' ~ (new_z|round(4)) ~ 'mm (fino)'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro AJUSTAR_Z_BAIXO_MEDIO]
description: Desce Z em 0.1mm durante calibra√ß√£o (ajuste m√©dio)
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z - 0.1 %}
        G90
        G0 Z{new_z} F200
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨áÔ∏èüìè Z = ' ~ (new_z|round(3)) ~ 'mm (m√©dio)'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro AJUSTAR_Z_CIMA_MEDIO]
description: Sobe Z em 0.1mm durante calibra√ß√£o (ajuste m√©dio)
gcode:
    {% if printer['gcode_macro CALIBRATION_DATA'].calibration_active %}
        {% set current_z = printer.save_variables.variables.current_z_position|float %}
        {% set new_z = current_z + 0.1 %}
        G90
        G0 Z{new_z} F200
        SAVE_VARIABLE VARIABLE=current_z_position VALUE={new_z}
        RESPOND MSG="{'‚¨ÜÔ∏èüìè Z = ' ~ (new_z|round(3)) ~ 'mm (m√©dio)'}"
    {% else %}
        RESPOND MSG="‚ùå Nenhuma calibra√ß√£o ativa"
    {% endif %}

[gcode_macro CALIB_OFFS]
description: Macro completa para calibra√ß√£o de offsets com PLA
gcode:
    RESPOND MSG="üöÄ ===== INICIANDO CALIBRA√á√ÉO COMPLETA ====="
    RESPOND MSG="üî• Configurando para PLA..."
    
    # Configurar temperaturas para PLA
    PLA
    
    RESPOND MSG="üè† Fazendo homing completo..."
    # Homing completo
    G28
    
    RESPOND MSG="üîß Ativando ferramenta T0..."
    # Ativar T0
    T0
    
    RESPOND MSG="üìê Iniciando calibra√ß√£o de Z offsets..."
    # Executar calibra√ß√£o de offsets
    CALIB_Z_BLT
    
    RESPOND MSG="‚úÖ Sequ√™ncia de calibra√ß√£o iniciada com sucesso!"
    RESPOND MSG="üí° Continue seguindo as instru√ß√µes da calibra√ß√£o"

[gcode_macro CONFIRMAR_Z_T1]
description: Confirma calibra√ß√£o da T1
gcode:
    CONFIRMAR_Z_TOOL TOOL=1

[gcode_macro CONFIRMAR_Z_T2]
description: Confirma calibra√ß√£o da T2
gcode:
    CONFIRMAR_Z_TOOL TOOL=2

[gcode_macro CONFIRMAR_Z_T3]
description: Confirma calibra√ß√£o da T3
gcode:
    CONFIRMAR_Z_TOOL TOOL=3

[gcode_macro CONFIRMAR_Z_TOOL]
description: Confirma calibra√ß√£o de uma ferramenta espec√≠fica
gcode:
    {% set tool = params.TOOL|int %}
    {% set current_tool = printer.save_variables.variables.current_calibrating_tool|int %}
    
    {% if tool != current_tool %}
        RESPOND MSG="‚ùå Ferramenta incorreta! Calibrando T{current_tool}, mas confirmando T{tool}"
        RESPOND MSG="üí° Use CONFIRMAR_Z_T{current_tool}"
    {% else %}
        {% set final_z = printer.save_variables.variables.current_z_position|float %}
        {% set ref_z = printer.save_variables.variables.t0_reference_z|float %}
        {% set paper_thickness = printer['gcode_macro CALIBRATION_DATA'].paper_thickness|float %}
        
        # Calcular offset Z (diferen√ßa em rela√ß√£o ao T0, compensando papel)
        {% set z_offset = (final_z - ref_z) - paper_thickness %}
        
        # Salvar offset
        SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool} VALUE={z_offset}
        SAVE_VARIABLE VARIABLE=tool_{tool}_offset_z VALUE={z_offset}
        
        RESPOND MSG="{'‚úÖ T' ~ tool ~ ' calibrado com sucesso!'}"
        RESPOND MSG="{'üìä Altura final: ' ~ (final_z|round(4)) ~ 'mm'}"
        RESPOND MSG="{'üìä Refer√™ncia T0: ' ~ (ref_z|round(4)) ~ 'mm'}"
        RESPOND MSG="{'üìä Z Offset T' ~ tool ~ ': ' ~ (z_offset|round(4)) ~ 'mm'}"
        
        # Verificar se offset est√° razo√°vel
        {% if z_offset|abs > 1.0 %}
            RESPOND MSG="{'‚ö†Ô∏è ATEN√á√ÉO: Offset muito grande (' ~ (z_offset|round(4)) ~ 'mm)!'}"
            RESPOND MSG="üí° Verifique se o papel foi usado corretamente"
        {% elif z_offset|abs > 0.5 %}
            RESPOND MSG="{'‚ö†Ô∏è Offset significativo (' ~ (z_offset|round(4)) ~ 'mm) - Verificar'}"
        {% else %}
            RESPOND MSG="{'‚úÖ Offset dentro do normal (' ~ (z_offset|round(4)) ~ 'mm)'}"
        {% endif %}
        
        # Ir para altura segura
        G0 Z10 F600
        
        # Manter calibra√ß√£o ativa para pr√≥xima ferramenta
        # SET_GCODE_VARIABLE MACRO=CALIBRATION_DATA VARIABLE=calibration_active VALUE=False
        
        RESPOND MSG="‚úÖ T{tool} calibrado com sucesso!"
        RESPOND MSG="üéØ Execute CALIBRAR_PROXIMA_FERRAMENTA para continuar"
        RESPOND MSG="üí° Ou execute RELATORIO_Z_OFFSETS_FINAL se terminou"
    {% endif %}

[gcode_macro RELAT_Z_FINAL]
description: Relat√≥rio final dos Z offsets calibrados
gcode:
    # Finalizar calibra√ß√£o
    SET_GCODE_VARIABLE MACRO=CALIBRATION_DATA VARIABLE=calibration_active VALUE=False
    
    RESPOND MSG="üìã ===== RELAT√ìRIO FINAL Z OFFSETS ====="
    RESPOND MSG="üìÖ Calibra√ß√£o conclu√≠da"
    RESPOND MSG=""
    
    # T0 (refer√™ncia)
    {% set ref_z = printer.save_variables.variables.t0_reference_z|default(0.0)|float %}
    RESPOND MSG="{'üîß T0 (Refer√™ncia): Z = ' ~ (ref_z|round(4)) ~ 'mm (BLTouch)'}"
    
    # T1, T2 (T3 desabilitado no tools.cfg)
    {% for tool_num in range(1, 3) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% if z_offset != 0.0 %}
            RESPOND MSG="{'üîß T' ~ tool_num ~ ': Offset Z = ' ~ ('%+.4f'|format(z_offset)) ~ 'mm'}"
        {% else %}
            RESPOND MSG="{'‚ö†Ô∏è T' ~ tool_num ~ ': N√ÉO CALIBRADO (offset = 0.000mm)'}"
        {% endif %}
    {% endfor %}
    
    # Mostrar T3 como desabilitado se tiver offset residual
    {% set z_offset_t3 = vars.get('tool_1_offset_z', 0.0)|float %}
    {% if z_offset_t3 != 0.0 %}
        RESPOND MSG="{'üö´ T3: DESABILITADO (offset residual = ' ~ ('%+.4f'|format(z_offset_t3)) ~ 'mm)'}"
    {% else %}
        RESPOND MSG="üö´ T3: DESABILITADO (sem macro no tools.cfg)"
    {% endif %}
    
    RESPOND MSG=""
    RESPOND MSG="üí° PR√ìXIMOS PASSOS:"
    RESPOND MSG="   1. Execute SAVE_CONFIG para salvar permanentemente"
    RESPOND MSG="   2. Teste com impress√£o de primeira camada"
    RESPOND MSG="   3. Ajuste fino se necess√°rio com AJUSTE_FINO_Z"
    RESPOND MSG="   4. Use BACKUP_OFFSETS para criar backup"

[gcode_macro AJUSTE_FINO_Z]
description: Ajuste fino de Z offset para uma ferramenta espec√≠fica
gcode:
    {% set tool = params.TOOL|default(1)|int %}
    {% set ajuste = params.AJUSTE|default(0.0)|float %}
    
    {% if ajuste == 0.0 %}
        RESPOND MSG="‚ùå Use: AJUSTE_FINO_Z TOOL=1 AJUSTE=-0.05"
        RESPOND MSG="üí° Valores positivos sobem, negativos descem"
        RESPOND MSG="üí° Ou use AJUSTE_FINO_Z_ATUAL AJUSTE=-0.05 para ferramenta ativa"
    {% else %}
        {% set current_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool]|default(0.0)|float %}
        {% set new_offset = current_offset + ajuste %}
        
        SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool} VALUE={new_offset}
        SAVE_VARIABLE VARIABLE=tool_{tool}_offset_z VALUE={new_offset}
        
        RESPOND MSG="{'üîß T' ~ tool ~ ': ' ~ (current_offset|round(4)) ~ 'mm ‚Üí ' ~ (new_offset|round(4)) ~ 'mm'}"
        RESPOND MSG="{'üìä Ajuste aplicado: ' ~ ('%+.4f'|format(ajuste)) ~ 'mm'}"
        RESPOND MSG="üíæ Execute SAVE_CONFIG para salvar"
    {% endif %}

[gcode_macro AJUSTE_FINO_Z_ATUAL]
description: Ajuste fino de Z offset para a ferramenta atualmente ativa
gcode:
    {% set ajuste = params.AJUSTE|default(0.0)|float %}
    
    {% if ajuste == 0.0 %}
        RESPOND MSG="‚ùå Use: AJUSTE_FINO_Z_ATUAL AJUSTE=-0.05"
        RESPOND MSG="üí° Valores positivos sobem, negativos descem"
    {% else %}
        # Detectar ferramenta ativa atual
        {% set active_tool = printer['gcode_macro TOOL_STATE'].tool|default(1)|int %}
        
        # Converter n√∫mero da ferramenta ativa para √≠ndice de offset (T0=1, T1=2, T2=3)
        {% if active_tool == 1 %}
            {% set tool_offset_index = 0 %}  # T0 n√£o tem offset (refer√™ncia)
        {% elif active_tool == 2 %}
            {% set tool_offset_index = 1 %}  # T1
        {% elif active_tool == 3 %}
            {% set tool_offset_index = 2 %}  # T2
        {% else %}
            {% set tool_offset_index = 1 %}  # Default para T1
        {% endif %}
        
        {% if tool_offset_index == 0 %}
            RESPOND MSG="‚ö†Ô∏è T0 √© a refer√™ncia (BLTouch fixo) - n√£o pode ser ajustado"
            RESPOND MSG="üí° Use T1 ou T2 para ajustes de offset"
        {% else %}
             {% set current_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_offset_index]|default(0.0)|float %}
             {% set new_offset = current_offset + ajuste %}
             
             # Aplicar o offset na mem√≥ria
             SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_z{tool_offset_index} VALUE={new_offset}
             SAVE_VARIABLE VARIABLE=tool_{tool_offset_index}_offset_z VALUE={new_offset}
             
             # Mover fisicamente o Z para aplicar o novo offset imediatamente
             {% set current_z = printer.toolhead.position.z %}
             G91  # Modo relativo
             G1 Z{ajuste} F300  # Move Z pelo valor do ajuste
             G90  # Volta ao modo absoluto
             
             RESPOND MSG="{'üîß T' ~ tool_offset_index ~ ' (ativa): ' ~ (current_offset|round(4)) ~ 'mm ‚Üí ' ~ (new_offset|round(4)) ~ 'mm'}"
             RESPOND MSG="{'üìä Ajuste aplicado: ' ~ ('%+.4f'|format(ajuste)) ~ 'mm'}"
             RESPOND MSG="{'‚¨ÜÔ∏è Z movido fisicamente: ' ~ ('%+.4f'|format(ajuste)) ~ 'mm'}"
             RESPOND MSG="üíæ Execute SAVE_CONFIG para salvar"
         {% endif %}
    {% endif %}

[gcode_macro LIMPAR_OFFSET_T3]
description: Remove offset residual do T3 desabilitado
gcode:
    RESPOND MSG="üßπ Limpando offset residual do T3 desabilitado..."
    
    SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_x3 VALUE=0.0
    SET_GCODE_VARIABLE MACRO=TOOL_DATA VARIABLE=offset_y3 VALUE=0.0
    # offset_z3 removido - Z lido diretamente de variables.cfg
    
    SAVE_VARIABLE VARIABLE=tool_3_offset_x VALUE=0.0
    SAVE_VARIABLE VARIABLE=tool_3_offset_y VALUE=0.0
    SAVE_VARIABLE VARIABLE=tool_3_offset_z VALUE=0.0
    
    RESPOND MSG="‚úÖ Offsets do T3 zerados (T3 est√° desabilitado)"
    RESPOND MSG="üíæ Execute SAVE_CONFIG para salvar permanentemente"

[gcode_macro STATUS_CALIBRACAO]
description: Mostra o status atual da calibra√ß√£o e pr√≥ximos passos
gcode:
    RESPOND MSG="üìä ===== STATUS DA CALIBRA√á√ÉO ====="
    
    # Verificar qual ferramenta est√° sendo calibrada
    {% set current_tool = printer.save_variables.variables.current_calibrating_tool|default(0)|int %}
    {% set calibration_active = printer['gcode_macro CALIBRATION_DATA'].calibration_active|default(false) %}
    
    {% if calibration_active %}
        RESPOND MSG="{'üîß Calibrando atualmente: T' ~ current_tool}"
        RESPOND MSG="üìã PR√ìXIMOS PASSOS:"
        RESPOND MSG="{'   1. Ajuste T' ~ current_tool ~ ' com AJUSTAR_Z_BAIXO/CIMA'}"
        RESPOND MSG="{'   2. Execute CONFIRMAR_Z_T' ~ current_tool ~ ' quando perfeito'}"
        {% if current_tool < 2 %}
            RESPOND MSG="   3. Execute CALIBRAR_PROXIMA_FERRAMENTA para T{current_tool + 1}"
        {% else %}
            RESPOND MSG="   3. Execute RELATORIO_Z_OFFSETS_FINAL quando terminar"
        {% endif %}
    {% else %}
        RESPOND MSG="‚ö†Ô∏è Nenhuma calibra√ß√£o ativa"
        RESPOND MSG="üí° Execute CALIB_OFFS para iniciar calibra√ß√£o"
    {% endif %}
    
    RESPOND MSG=""
    # Mostrar offsets atuais
    {% set ref_z = printer.save_variables.variables.t0_reference_z|default(0.0)|float %}
    RESPOND MSG="{'üîß T0 (Refer√™ncia): Z = ' ~ (ref_z|round(4)) ~ 'mm'}"
    
    {% for tool_num in range(1, 3) %}
        {% set z_offset = printer['gcode_macro TOOL_DATA']['offset_z' ~ tool_num]|default(0.0)|float %}
        {% if z_offset != 0.0 %}
            RESPOND MSG="{'‚úÖ T' ~ tool_num ~ ': Offset Z = ' ~ ('%+.4f'|format(z_offset)) ~ 'mm'}"
        {% else %}
            RESPOND MSG="{'‚ö†Ô∏è T' ~ tool_num ~ ': N√ÉO CALIBRADO (offset = 0.000mm)'}"
        {% endif %}
    {% endfor %}
    
    {% set vars = printer.save_variables.variables %}
    {% set z_offset_t3 = vars.get('tool_1_offset_z', 0.0)|float %}
    {% if z_offset_t3 != 0.0 %}
        RESPOND MSG="{'üö´ T3: DESABILITADO (offset residual = ' ~ ('%+.4f'|format(z_offset_t3)) ~ 'mm) - Use LIMPAR_OFFSET_T3'}"
    {% else %}
        RESPOND MSG="üö´ T3: DESABILITADO (sem macro no tools.cfg)"
    {% endif %}