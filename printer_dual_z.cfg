[stepper_z1]
step_pin: PE3
dir_pin: !PD1
enable_pin: !PD2
rotation_distance: 2.0
microsteps: 32


[stepper_z]
step_pin: PE2
dir_pin: !PD4
enable_pin: !PD5
rotation_distance: 2.0
microsteps: 32
position_min: -5           ; j√° deve existir
position_max: 290          ; j√° deve existir 
endstop_pin: probe:z_virtual_endstop
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3


 
[tmc2209 stepper_z]
uart_pin: PD3
interpolate: true
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 100
[tmc2209 stepper_z1]
uart_pin: PD0
interpolate: true
run_current: 0.7
sense_resistor: 0.110
hold_current: 0.5
stealthchop_threshold: 100    # StealthChop threshold (set 0 to disable)


[z_tilt]
points:
  0, 100     ; lado esquerdo
  260, 100    ; lado direito
z_positions:
  -70, 100     ; posi√ß√£o f√≠sica do motor Z1
  370, 100     ; posi√ß√£o f√≠sica do motor Z2
speed: 150
horizontal_move_z: 9
retries: 15                    ; Aumentado para 15 tentativas
retry_tolerance: 0.05          ; Aumentado temporariamente para 0.05mm

# Macro melhorada para Z-Tilt com verifica√ß√£o p√≥s-nivelamento
[gcode_macro Z_TILT_ADJUST_ENHANCED]
description: Z-Tilt com verifica√ß√£o autom√°tica de qualidade
gcode:
    RESPOND MSG="üîß Iniciando nivelamento Z aprimorado..."
    
    # Verificar se a impressora est√° homed
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        RESPOND MSG="‚ö†Ô∏è Fazendo homing antes do nivelamento..."
        G28
    {% endif %}
    
    # Executar Z-Tilt
    Z_TILT_ADJUST
    
    # Garantir retra√ß√£o do BLTouch ap√≥s nivelamento
    BLTOUCH_DEBUG COMMAND=pin_up
    G4 P500
    
    # Verifica√ß√£o p√≥s-nivelamento
    RESPOND MSG="‚úÖ Verificando qualidade do nivelamento..."
    
    # Medir novamente os pontos para verificar precis√£o
    G90
    G0 Z10 F600
    
    # Ponto esquerdo
    G0 X0 Y100 F3000
    PROBE
    {% set z_left = printer.probe.last_z_result %}
    G0 Z10 F600  # Subir Z ap√≥s primeira medi√ß√£o
    
    # Ponto direito  
    G0 X260 Y100 F3000
    PROBE
    {% set z_right = printer.probe.last_z_result %}
    G0 Z10 F600  # Subir Z ap√≥s segunda medi√ß√£o
    
    # Calcular diferen√ßa
    {% set diff = (z_left - z_right)|abs %}
    
    {% if diff <= 0.02 %}
        RESPOND MSG="{'‚úÖ Nivelamento excelente! Diferen√ßa: ' ~ (diff|round(3)) ~ 'mm'}"
    {% elif diff <= 0.05 %}
        RESPOND MSG="{'‚ö†Ô∏è Nivelamento aceit√°vel. Diferen√ßa: ' ~ (diff|round(3)) ~ 'mm'}"
    {% else %}
        RESPOND MSG="{'‚ùå Nivelamento insatisfat√≥rio! Diferen√ßa: ' ~ (diff|round(3)) ~ 'mm - Considere verificar hardware'}"
    {% endif %}
    
    G0 Z10 F600
