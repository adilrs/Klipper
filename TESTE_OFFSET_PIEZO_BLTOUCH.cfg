# ===================================================================
#                    TESTE DE OFFSET PIEZO vs BLTOUCH
# ===================================================================
# Este arquivo cont√©m macros para testar e calibrar o offset entre
# o sensor piezoel√©trico e o BLTouch
#
# POSI√á√ïES:
# - BLTouch: offset X40 Y-50 (em rela√ß√£o ao bico)
# - Sensor Piezo: X320 Y100 (posi√ß√£o absoluta na mesa)
# ===================================================================

[gcode_macro TST_OFS_PZB]
description: Testa offset entre sensor piezoel√©trico e BLTouch
gcode:
    RESPOND MSG="üéØ ===== TESTE OFFSET PIEZO vs BLTOUCH ====="
    RESPOND MSG="üìç BLTouch: offset X40 Y-50 (relativo ao bico)"
    RESPOND MSG="üìç Sensor Piezo: X320 Y100 (posi√ß√£o absoluta)"
    
    # Salvar posi√ß√£o atual
    SAVE_GCODE_STATE NAME=teste_offset
    
    # Garantir que estamos em modo absoluto
    G90
    
    # 1. Fazer home para estabelecer refer√™ncia
    RESPOND MSG="üè† Fazendo home para estabelecer refer√™ncia..."
    G28
    
    # 2. Obter posi√ß√£o atual do bico ap√≥s G28
    {% set home_x = printer.toolhead.position.x %}
    {% set home_y = printer.toolhead.position.y %}
    {% set home_z = printer.toolhead.position.z %}
    
    RESPOND MSG="üìå Posi√ß√£o ap√≥s G28: X{home_x} Y{home_y} Z{home_z}"
    
    # 3. Calcular posi√ß√£o do BLTouch em coordenadas absolutas
    {% set bltouch_abs_x = home_x + 40 %}
    {% set bltouch_abs_y = home_y - 50 %}
    
    RESPOND MSG="üìç BLTouch em coordenadas absolutas: X{bltouch_abs_x} Y{bltouch_abs_y}"
    
    # 4. Verificar se a posi√ß√£o est√° dentro dos limites (X_max=325, Y_max=280)
    {% if bltouch_abs_x > 325 %}
        {% set bltouch_safe_x = 325 %}
        RESPOND MSG="‚ö†Ô∏è AVISO: X{bltouch_abs_x} excede limite! Usando X{bltouch_safe_x}"
    {% else %}
        {% set bltouch_safe_x = bltouch_abs_x %}
    {% endif %}
    
    {% if bltouch_abs_y < 0 %}
        {% set bltouch_safe_y = 0 %}
        RESPOND MSG="‚ö†Ô∏è AVISO: Y{bltouch_abs_y} abaixo do limite! Usando Y{bltouch_safe_y}"
    {% else %}
        {% set bltouch_safe_y = bltouch_abs_y %}
    {% endif %}
    
    # 5. Calcular diferen√ßa para o sensor piezo
    {% set offset_x = 320 - bltouch_safe_x %}
    {% set offset_y = 100 - bltouch_safe_y %}
    
    RESPOND MSG="üîß OFFSET CALCULADO:"
    RESPOND MSG="   Piezo X320 - BLTouch X{bltouch_safe_x} = {offset_x}mm"
    RESPOND MSG="   Piezo Y100 - BLTouch Y{bltouch_safe_y} = {offset_y}mm"
    
    # 6. Testar movimento para ambas as posi√ß√µes (usando coordenadas seguras)
    RESPOND MSG="üöÄ Testando movimento para posi√ß√£o do BLTouch..."
    G1 X{bltouch_safe_x} Y{bltouch_safe_y} Z10 F3000
    G4 P2000  # Pausa 2 segundos
    
    RESPOND MSG="üöÄ Testando movimento para posi√ß√£o do sensor piezo..."
    G1 X320 Y100 Z10 F3000
    G4 P2000  # Pausa 2 segundos
    
    # 7. Testar aproxima√ß√£o do sensor TP223 com detec√ß√£o manual
    RESPOND MSG="üîç Testando aproxima√ß√£o do sensor TP223..."
    RESPOND MSG="‚ö†Ô∏è Resetando estado do sensor TP223..."
    
    # Resetar vari√°veis do sensor TP223
    SET_GCODE_VARIABLE MACRO=TESTE_TP223_IND VARIABLE=sensor_triggered VALUE=0
    SET_GCODE_VARIABLE MACRO=TESTE_TP223_IND VARIABLE=trigger_z VALUE=0
    
    # Aproxima√ß√£o gradual at√© ativar o sensor TP223
    RESPOND MSG="üìâ Descendo gradualmente at√© ativar sensor TP223..."
    
    # Descer gradualmente at√© o sensor ativar
    _DESCIDA_GRADUAL_TP223
    
    # Subir para seguran√ßa
    G1 Z10 F1000
    RESPOND MSG="üõ°Ô∏è Retornando para posi√ß√£o segura Z10"
    
    # 8. Restaurar posi√ß√£o
    RESTORE_GCODE_STATE NAME=teste_offset
    
    RESPOND MSG="‚úÖ Teste conclu√≠do!"
    RESPOND MSG="üìã RESUMO DOS OFFSETS:"
    RESPOND MSG="   X offset: {offset_x}mm"
    RESPOND MSG="   Y offset: {offset_y}mm"

# ===================================================================
#                        MACROS AUXILIARES
# ===================================================================

[gcode_macro _DESCIDA_GRADUAL_TP223]
description: Descida gradual at√© ativar sensor TP223 com parada imediata
gcode:
    # Descer de 1mm em 1mm at√© o sensor ativar ou atingir Z0
    {% set sensor_ativado = false %}
    {% for step in range(1, 11) %}
        {% if not sensor_ativado %}
            {% set target_z = 10 - step %}
            G1 Z{target_z} F300
            G4 P200  # Pausa para estabilizar
            
            # Verificar se sensor foi ativado ap√≥s movimento
            {% if  printer["gcode_macro TESTE_TP223_IND"].sensor_triggered == 1 %} #printer['gcode_button sensor_tp223_teste'].state == 'PRESSED' or
                {% set altura_detectada = printer.gcode_move.gcode_position.z %}
                RESPOND MSG="‚úÖ Sensor TP223 ativado! Altura detectada: Z = {altura_detectada}mm"
                {action_respond_info("Sensor ativado - parando descida")}
                # Atualizar vari√°veis da macro
                SET_GCODE_VARIABLE MACRO=TESTE_TP223_IND VARIABLE=sensor_triggered VALUE=1
                SET_GCODE_VARIABLE MACRO=TESTE_TP223_IND VARIABLE=trigger_z VALUE={altura_detectada}
                # Marcar sensor como ativado para parar o loop
                {% set sensor_ativado = true %}
            {% elif step == 10 %}
                RESPOND MSG="‚ö†Ô∏è AVISO: Sensor TP223 n√£o ativou at√© Z0. Verifique conex√£o!"
            {% endif %}
        {% endif %}
    {% endfor %}

[gcode_macro MED_ALT_AMB]
description: Mede altura com BLTouch e sensor piezo para compara√ß√£o
gcode:
    RESPOND MSG="üìè ===== MEDI√á√ÉO COMPARATIVA DE ALTURA ====="
    
    # Salvar estado
    SAVE_GCODE_STATE NAME=medicao_altura
    G90
    
    # 1. Fazer home
    G28
    
    # 2. Medir com BLTouch (posi√ß√£o atual ap√≥s G28)
    RESPOND MSG="üîç Medindo altura com BLTouch..."
    PROBE
    {% set bltouch_z = printer.probe.last_z_result %}
    RESPOND MSG="üìå BLTouch mediu: Z = {bltouch_z}mm"
    
    # 3. Mover para posi√ß√£o do sensor piezo
    RESPOND MSG="üöÄ Movendo para posi√ß√£o do sensor piezo..."
    G1 X320 Y100 Z10 F3000
    
    # 4. Testar sensor piezo (se configurado como probe)
    RESPOND MSG="üîç Testando sensor piezo na posi√ß√£o X320 Y100..."
    RESPOND MSG="‚ö†Ô∏è Certifique-se que o sensor piezo est√° ativo!"
    
    # Verificar se sensor est√° respondendo
    QUERY_PROBE
    
    # 5. Restaurar posi√ß√£o
    RESTORE_GCODE_STATE NAME=medicao_altura
    
    RESPOND MSG="‚úÖ Medi√ß√£o conclu√≠da!"
    RESPOND MSG="üìã Resultado BLTouch: Z = {bltouch_z}mm"
    RESPOND MSG="üí° Para medir com piezo, use: PROBE (na posi√ß√£o X320 Y100)"
    RESPOND MSG="üìè Sensor piezo est√° ~0.9mm abaixo da mesa (z_offset: -0.9)"

[gcode_macro CAL_OFS_PZO]
description: Procedimento para calibrar offset do sensor piezo
gcode:
    RESPOND MSG="‚öôÔ∏è ===== CALIBRA√á√ÉO OFFSET SENSOR PIEZO ====="
    RESPOND MSG="üìã PROCEDIMENTO:"
    RESPOND MSG="1. Execute: TESTE_OFFSET_PIEZO_BLTOUCH"
    RESPOND MSG="2. Anote os valores de offset X e Y"
    RESPOND MSG="3. Configure no printer.cfg:"
    RESPOND MSG="   [probe]"
    RESPOND MSG="   pin: !host:gpio22"
    RESPOND MSG="   x_offset: [valor_calculado]"
    RESPOND MSG="   y_offset: [valor_calculado]"
    RESPOND MSG="   z_offset: -0.9  # Sensor 0.9mm abaixo da mesa"
    RESPOND MSG="4. Execute: RESTART"
    RESPOND MSG="5. Execute: PROBE_CALIBRATE"
    RESPOND MSG=""
    RESPOND MSG="‚ö†Ô∏è IMPORTANTE:"
    RESPOND MSG="- Desative BLTouch se usar sensor piezo como probe principal"
    RESPOND MSG="- Ou mantenha ambos para diferentes fun√ß√µes"

# ===================================================================
#                           COMANDOS √öTEIS
# ===================================================================
# TESTE_OFFSET_PIEZO_BLTOUCH  - Calcula offset entre sensores
# MEDIR_ALTURA_AMBOS_SENSORES - Compara medi√ß√µes
# CALIBRAR_OFFSET_PIEZO       - Guia de calibra√ß√£o
# G1 X320 Y100 Z10 F3000      - Mover para sensor piezo
# QUERY_PROBE                 - Verificar status do probe ativo
# ===================================================================