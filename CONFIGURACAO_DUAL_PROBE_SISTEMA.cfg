#####################################################################
#           CONFIGURA√á√ÉO DUAL PROBE - BLTouch + Piezoel√©trico      #
#####################################################################
# 
# SISTEMA H√çBRIDO:
# - BLTouch (T0): Probe principal para homing, mesh, nivelamento
# - Sensor Piezoel√©trico: Endstop secund√°rio para calibra√ß√£o de offsets
#
# BASEADO NA PESQUISA:
# - Klipper n√£o suporta m√∫ltiplas sondas nativamente
# - Solu√ß√£o: Usar piezo como endstop + macros personalizadas
# - Refer√™ncia: Sistema de toolchanger existente com T0-T3
#
#####################################################################

#####################################################################
#                    SENSOR PIEZOEL√âTRICO COMO ENDSTOP             #
#####################################################################

# Configura√ß√£o do sensor piezoel√©trico via troca din√¢mica de pinos
# O pino GPIO22 do host ser√° usado dinamicamente atrav√©s das macros USE_PIEZO_PROBE/USE_BLTOUCH_PROBE
# Requer configura√ß√£o de output_pin no printer.cfg para controle do pino do probe

#####################################################################
#                    ESTADO DO SENSOR PIEZOEL√âTRICO                #
#####################################################################

[gcode_macro PIEZO_STATE]
variable_triggered: False
variable_trigger_position: 0.0
variable_last_calibration: ""
variable_samples: []
gcode:
    RESPOND MSG="Estado do sensor piezoel√©trico: {triggered}"

#####################################################################
#                    MACROS DE TROCA DIN√ÇMICA DE PROBE             #
#####################################################################

[gcode_macro USE_PIEZO_PROBE]
description: Alterna para usar o sensor piezoel√©trico como probe ativo
gcode:
    # Configurar pino do probe para piezoel√©trico
    SET_PIN PIN=probe_pin VALUE=0  # Desativar probe atual
    G4 P100  # Aguardar estabiliza√ß√£o
    
    # Reconfigurar probe para usar pino do piezoel√©trico
    # Nota: Esta abordagem requer configura√ß√£o adicional no printer.cfg
    RESPOND MSG="üîÑ Alternando para sensor piezoel√©trico (GPIO22)"
    
    # Salvar estado atual
    SET_GCODE_VARIABLE MACRO=PROBE_STATE VARIABLE=active_probe VALUE="piezo"
    SET_GCODE_VARIABLE MACRO=PROBE_STATE VARIABLE=active_pin VALUE="GPIO22"
    
    RESPOND MSG="‚úÖ Sensor piezoel√©trico ativo"

[gcode_macro USE_BLTOUCH_PROBE]
description: Alterna para usar o BLTouch como probe ativo
gcode:
    # Configurar pino do probe para BLTouch
    SET_PIN PIN=probe_pin VALUE=0  # Desativar probe atual
    G4 P100  # Aguardar estabiliza√ß√£o
    
    RESPOND MSG="üîÑ Alternando para BLTouch"
    
    # Salvar estado atual
    SET_GCODE_VARIABLE MACRO=PROBE_STATE VARIABLE=active_probe VALUE="bltouch"
    SET_GCODE_VARIABLE MACRO=PROBE_STATE VARIABLE=active_pin VALUE="bltouch_pin"
    
    RESPOND MSG="‚úÖ BLTouch ativo"

[gcode_macro PROBE_STATE]
variable_active_probe: "bltouch"  # Probe ativo por padr√£o
variable_active_pin: "bltouch_pin"
variable_last_switch: ""
gcode:
    RESPOND MSG="üîç Probe ativo: {active_probe} (pino: {active_pin})"

#####################################################################
#                    MACROS DE CALIBRA√á√ÉO COM PIEZO                #
#####################################################################

[gcode_macro QUERY_PIEZO]
description: Verifica estado do sensor piezoel√©trico
gcode:
    {% set state = printer["gcode_macro PIEZO_STATE"].triggered %}
    {% if state %}
        RESPOND MSG="üîç Sensor piezoel√©trico: ATIVADO"
    {% else %}
        RESPOND MSG="üîç Sensor piezoel√©trico: LIVRE"
    {% endif %}

[gcode_macro piezo_accuracy]
description: Testa precis√£o do sensor piezoel√©trico (similar ao PROBE_ACCURACY)
gcode:
    {% set samples = params.SAMPLES|default(10)|int %}
    {% set speed = params.SPEED|default(5.0)|float %}
    {% set lift_speed = params.LIFT_SPEED|default(10.0)|float %}
    {% set retract_dist = params.SAMPLE_RETRACT_DIST|default(2.0)|float %}
    
    RESPOND MSG="üîç Testando precis√£o do sensor piezoel√©trico..."
    RESPOND MSG="   Amostras: {samples}, Velocidade: {speed}mm/s"
    
    # Limpar amostras anteriores
    SET_GCODE_VARIABLE MACRO=PIEZO_STATE VARIABLE=samples VALUE="[]"
    
    # Posi√ß√£o inicial
    {% set start_z = printer.toolhead.position.z %}
    
    # Realizar amostras
    {% for i in range(samples) %}
        RESPOND MSG="   Amostra {i+1}/{samples}..."
        
        # Descer at√© tocar o sensor
        G91  # Modo relativo
        G1 Z-10 F{speed*60}  # Descer devagar
        
        # Aguardar trigger (simulado - em implementa√ß√£o real seria autom√°tico)
        M400  # Aguardar movimento completar
        
        # Subir para pr√≥xima amostra
        G1 Z{retract_dist} F{lift_speed*60}
        G90  # Modo absoluto
        
        # Aguardar estabiliza√ß√£o
        G4 P100
    {% endfor %}
    
    RESPOND MSG="‚úÖ Teste de precis√£o conclu√≠do"
    RESPOND MSG="üí° Verifique os resultados e ajuste se necess√°rio"

[gcode_macro PROBE_PIEZO_POINT]
description: Realiza medi√ß√£o pontual com sensor piezoel√©trico usando troca din√¢mica
gcode:
    {% set samples = params.SAMPLES|default(3)|int %}
    
    RESPOND MSG="üîç Iniciando medi√ß√£o com sensor piezoel√©trico..."
    
    # Alternar para probe piezoel√©trico
    USE_PIEZO_PROBE
    
    # Realizar medi√ß√£o
    PROBE_ACCURACY SAMPLES={samples}
    
    # Salvar resultado da medi√ß√£o
    SET_GCODE_VARIABLE MACRO=PIEZO_STATE VARIABLE=trigger_position VALUE={printer.probe.last_z_result}
    SET_GCODE_VARIABLE MACRO=PIEZO_STATE VARIABLE=triggered VALUE=True
    
    # Voltar para BLTouch
    USE_BLTOUCH_PROBE
    
    RESPOND MSG="üìç Posi√ß√£o Z detectada: {printer.probe.last_z_result}"

[gcode_macro PIEZO_CALIBRATE]
description: Calibra offset Z usando sensor piezoel√©trico (probe2)
gcode:
    {% set tool = params.TOOL|default(0)|int %}
    
    RESPOND MSG="üîß Iniciando calibra√ß√£o piezoel√©trica para T{tool}..."
    
    # Verificar se ferramenta est√° ativa
    {% set current_tool = printer["gcode_macro TOOL_STATE"].tool|int %}
    {% if current_tool != (tool + 1) %}
        RESPOND MSG="‚ùå ERRO: T{tool} n√£o est√° ativa!"
        RESPOND MSG="üí° Execute T{tool} primeiro"
        {% set dummy = "return" %}
    {% endif %}
    
    # Posicionar sobre o sensor piezoel√©trico
    RESPOND MSG="üìç Posicionando sobre sensor piezoel√©trico..."
    G90  # Modo absoluto
    G1 X150 Y150 F6000  # Posi√ß√£o do sensor (ajustar conforme instala√ß√£o)
    G1 Z10 F1200         # Altura segura
    
    # Realizar medi√ß√£o usando probe2 diretamente
    RESPOND MSG="üîç Medindo com sensor piezoel√©trico (probe2)..."
    PROBE PROBE=probe2
    
    {% set trigger_z = printer.probe.last_z_result|float %}
    RESPOND MSG="‚úÖ Posi√ß√£o detectada: Z = {trigger_z|round(4)}mm"
    
    # Salvar resultado no estado do piezo
    SET_GCODE_VARIABLE MACRO=PIEZO_STATE VARIABLE=trigger_position VALUE={trigger_z}
    SET_GCODE_VARIABLE MACRO=PIEZO_STATE VARIABLE=triggered VALUE=True
    
    RESPOND MSG="üìä Calibra√ß√£o T{tool} conclu√≠da"
    RESPOND MSG="üíæ Use SALVAR_OFFSET_PIEZO TOOL={tool} para salvar"

[gcode_macro SALVAR_OFFSET_PIEZO]
description: Salva offset calibrado com sensor piezoel√©trico
gcode:
    {% set tool = params.TOOL|default(0)|int %}
    {% set ref_z = params.REFERENCE_Z|default(0.0)|float %}
    {% set trigger_z = printer["gcode_macro PIEZO_STATE"].trigger_position|float %}
    
    # Calcular offset relativo
    {% set offset_z = trigger_z - ref_z %}
    
    RESPOND MSG="üíæ Salvando offset T{tool}..."
    RESPOND MSG="   Refer√™ncia: {ref_z|round(4)}mm"
    RESPOND MSG="   Trigger: {trigger_z|round(4)}mm"
    RESPOND MSG="   Offset: {offset_z|round(4)}mm"
    
    # Salvar no variables.cfg conforme sistema existente
    {% if tool == 1 %}
        SAVE_VARIABLE VARIABLE=tool_0_offset_z VALUE={offset_z}
    {% elif tool == 2 %}
        SAVE_VARIABLE VARIABLE=tool_1_offset_z VALUE={offset_z}
    {% elif tool == 3 %}
        SAVE_VARIABLE VARIABLE=tool_2_offset_z VALUE={offset_z}
    {% endif %}
    
    RESPOND MSG="‚úÖ Offset T{tool} salvo: {offset_z|round(4)}mm"

#####################################################################
#                    CALIBRA√á√ÉO AUTOM√ÅTICA DE TODAS AS FERRAMENTAS #
#####################################################################

[gcode_macro CALIB_OFF_AUTO]
description: Calibra offsets de todas as ferramentas usando sensor piezoel√©trico
gcode:
    {% set tools_list = params.TOOLS.split(',') %}
    {% set ref_tool = params.REFERENCE_TOOL|default(0)|int %}
    
    RESPOND MSG="üîß ===== CALIBRA√á√ÉO AUTOM√ÅTICA DE OFFSETS ====="
    RESPOND MSG="üìå Refer√™ncia: T{ref_tool} (BLTouch)"
    RESPOND MSG="üîç Ferramentas: {params.TOOLS}"
    RESPOND MSG="‚öôÔ∏è Sensor: Piezoel√©trico"
    
    # Estabelecer refer√™ncia com T0 (BLTouch)
    RESPOND MSG="üìç Estabelecendo refer√™ncia T{ref_tool}..."
    T{ref_tool}  # Ativar ferramenta de refer√™ncia
    G28 Z        # Home Z com BLTouch
    
    # Mover para posi√ß√£o do sensor piezoel√©trico
    G90
    G1 X150 Y150 F6000  # Posi√ß√£o do sensor
    
    # Medir refer√™ncia com BLTouch
    PROBE
    {% set ref_z = printer.probe.last_z_result %}
    RESPOND MSG="‚úÖ Refer√™ncia T{ref_tool}: Z = {ref_z|round(4)}mm"
    
    # Calibrar cada ferramenta
    {% for tool_str in tools_list %}
        {% set tool = tool_str|int %}
        RESPOND MSG="üîß Calibrando T{tool}..."
        
        # Ativar ferramenta
        T{tool}
        
        # Calibrar com piezo
        PIEZO_CALIBRATE TOOL={tool}
        
        # Salvar offset
        SALVAR_OFFSET_PIEZO TOOL={tool} REFERENCE_Z={ref_z}
        
        RESPOND MSG="‚úÖ T{tool} calibrada"
    {% endfor %}
    
    # Aplicar offsets
    INIT_TOOL_OFFSETS
    
    RESPOND MSG="üéâ Calibra√ß√£o autom√°tica conclu√≠da!"
    RESPOND MSG="üíæ Execute SAVE_CONFIG para salvar permanentemente"

#####################################################################
#                    MACROS DE TESTE E VERIFICA√á√ÉO                 #
#####################################################################

[gcode_macro TESTAR_SISTEMA_DUAL]
description: Testa funcionamento do sistema dual BLTouch + Piezo
gcode:
    RESPOND MSG="üß™ ===== TESTE DO SISTEMA DUAL ====="
    
    # Testar BLTouch
    RESPOND MSG="üîç Testando BLTouch..."
    QUERY_PROBE
    
    # Testar sensor piezoel√©trico
    RESPOND MSG="üîç Testando sensor piezoel√©trico..."
    QUERY_PIEZO
    
    # Testar precis√£o do BLTouch
    RESPOND MSG="üìä Testando precis√£o BLTouch..."
    PROBE_ACCURACY
    
    # Testar precis√£o do piezo
    RESPOND MSG="üìä Testando precis√£o piezoel√©trico..."
    piezo_accuracy SAMPLES=5
    
    RESPOND MSG="‚úÖ Teste do sistema dual conclu√≠do"

[gcode_macro STATUS_DUAL_PROBE]
description: Mostra status do sistema dual probe
gcode:
    RESPOND MSG="üìä ===== STATUS SISTEMA DUAL PROBE ====="
    
    # Status BLTouch
    {% set bltouch_offset = printer.configfile.settings.bltouch.z_offset %}
    RESPOND MSG="üîç BLTouch (T0): Z offset = {bltouch_offset|round(4)}mm"
    
    # Status sensor piezoel√©trico
    {% set piezo_triggered = printer["gcode_macro PIEZO_STATE"].triggered %}
    {% set piezo_pos = printer["gcode_macro PIEZO_STATE"].trigger_position %}
    RESPOND MSG="üîç Sensor Piezo: {'ATIVADO' if piezo_triggered else 'LIVRE'}"
    RESPOND MSG="   √öltima posi√ß√£o: {piezo_pos|round(4)}mm"
    
    # Status offsets das ferramentas
    {% set vars = printer.save_variables.variables %}
    RESPOND MSG="üîß Offsets das ferramentas:"
    RESPOND MSG="   T0: Z = 0.000mm (refer√™ncia BLTouch)"
    
    {% if 'tool_0_offset_z' in vars %}
        RESPOND MSG="   T1: Z = {vars.tool_0_offset_z|round(4)}mm"
    {% else %}
        RESPOND MSG="   T1: N√£o calibrada"
    {% endif %}
    
    {% if 'tool_1_offset_z' in vars %}
        RESPOND MSG="   T2: Z = {vars.tool_1_offset_z|round(4)}mm"
    {% else %}
        RESPOND MSG="   T2: N√£o calibrada"
    {% endif %}
    
    {% if 'tool_2_offset_z' in vars %}
        RESPOND MSG="   T3: Z = {vars.tool_2_offset_z|round(4)}mm"
    {% else %}
        RESPOND MSG="   T3: N√£o calibrada"
    {% endif %}

#####################################################################
#                    DOCUMENTA√á√ÉO E INSTRU√á√ïES                     #
#####################################################################

[gcode_macro HELP_DUAL_PROBE]
description: Mostra ajuda do sistema dual probe
gcode:
    RESPOND MSG="üìö ===== AJUDA SISTEMA DUAL PROBE ====="
    RESPOND MSG=""
    RESPOND MSG="üîç SENSORES:"
    RESPOND MSG="   ‚Ä¢ BLTouch (T0): Homing, mesh, nivelamento"
    RESPOND MSG="   ‚Ä¢ Piezoel√©trico: Calibra√ß√£o de offsets T1-T3"
    RESPOND MSG=""
    RESPOND MSG="üîß COMANDOS PRINCIPAIS:"
    RESPOND MSG="   ‚Ä¢ QUERY_PIEZO - Verifica sensor piezoel√©trico"
    RESPOND MSG="   ‚Ä¢ PIEZO_CALIBRATE TOOL=X - Calibra ferramenta X"
    RESPOND MSG="   ‚Ä¢ CALIBRAR_OFFSETS_AUTOMATICO - Calibra todas"
    RESPOND MSG="   ‚Ä¢ STATUS_DUAL_PROBE - Mostra status completo"
    RESPOND MSG=""
    RESPOND MSG="üß™ COMANDOS DE TESTE:"
    RESPOND MSG="   ‚Ä¢ TESTAR_SISTEMA_DUAL - Testa ambos sensores"
    RESPOND MSG="   ‚Ä¢ piezo_accuracy - Testa precis√£o piezo"
    RESPOND MSG=""
    RESPOND MSG="üí° FLUXO RECOMENDADO:"
    RESPOND MSG="   1. TESTAR_SISTEMA_DUAL"
    RESPOND MSG="   2. CALIBRAR_OFFSETS_AUTOMATICO"
    RESPOND MSG="   3. STATUS_DUAL_PROBE"
    RESPOND MSG="   4. SAVE_CONFIG"