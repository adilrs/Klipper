#!/usr/bin/env python3

# Teste final da macro PROBE_TP223_SURFACE corrigida

def test_macro_corrections():
    print("üß™ TESTE FINAL DA MACRO CORRIGIDA")
    print("=" * 40)
    
    try:
        with open('k:/calibracao_tp223_automatica.cfg', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Verifica√ß√µes essenciais
        tests = [
            ('{% break %}', False, "‚ùå {% break %} removido", "‚úÖ {% break %} removido"),
            ('sensor_detected = 0', True, "‚ùå Vari√°vel sensor_detected n√£o encontrada", "‚úÖ Vari√°vel sensor_detected implementada"),
            ('{% if sensor_detected == 0 %}', True, "‚ùå L√≥gica de controle n√£o implementada", "‚úÖ L√≥gica de controle implementada"),
            ('G91', True, "‚ùå Comando G91 n√£o encontrado", "‚úÖ Comando G91 presente"),
            ('G90', True, "‚ùå Comando G90 n√£o encontrado", "‚úÖ Comando G90 presente"),
            ('QUERY_ENDSTOPS', True, "‚ùå QUERY_ENDSTOPS n√£o encontrado", "‚úÖ QUERY_ENDSTOPS presente")
        ]
        
        all_passed = True
        
        for pattern, should_exist, fail_msg, success_msg in tests:
            if should_exist:
                if pattern in content:
                    print(success_msg)
                else:
                    print(fail_msg)
                    all_passed = False
            else:
                if pattern not in content:
                    print(success_msg)
                else:
                    print(fail_msg)
                    all_passed = False
        
        print()
        print("=" * 40)
        
        if all_passed:
            print("üéâ TODOS OS TESTES PASSARAM!")
            print("‚úÖ A macro PROBE_TP223_SURFACE est√° corrigida")
            print("‚úÖ Sintaxe Jinja2 v√°lida")
            print("‚úÖ L√≥gica de controle implementada")
            print("‚úÖ Pronta para uso no Klipper")
            print()
            print("üìã PR√ìXIMOS PASSOS:")
            print("  1. Reiniciar o Klipper")
            print("  2. Executar G28")
            print("  3. Testar a macro CAL_T0")
        else:
            print("‚ùå ALGUNS TESTES FALHARAM")
            print("A macro precisa de corre√ß√µes adicionais")
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå ERRO: {e}")
        return False

if __name__ == "__main__":
    test_macro_corrections()